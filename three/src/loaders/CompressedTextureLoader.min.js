/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/loaders/CompressedTextureLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{LinearFilter}from"../constants.js";import{FileLoader}from"./FileLoader.js";import{CompressedTexture}from"../textures/CompressedTexture.js";import{Loader}from"./Loader.js";function CompressedTextureLoader(e){Loader.call(this,e)}CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(e,r,t,a){var i=this,o=[],m=new CompressedTexture;m.image=o;var p=new FileLoader(this.manager);function s(s){p.load(e[s],function(e){var t=i.parse(e,!0);o[s]={width:t.width,height:t.height,format:t.format,mipmaps:t.mipmaps},6===(n+=1)&&(1===t.mipmapCount&&(m.minFilter=LinearFilter),m.format=t.format,m.needsUpdate=!0,r&&r(m))},t,a)}if(p.setPath(this.path),p.setResponseType("arraybuffer"),Array.isArray(e))for(var n=0,d=0,h=e.length;d<h;++d)s(d);else p.load(e,function(e){var t=i.parse(e,!0);if(t.isCubemap)for(var a=t.mipmaps.length/t.mipmapCount,p=0;p<a;p++){o[p]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[p].mipmaps.push(t.mipmaps[p*t.mipmapCount+s]),o[p].format=t.format,o[p].width=t.width,o[p].height=t.height}else m.image.width=t.width,m.image.height=t.height,m.mipmaps=t.mipmaps;1===t.mipmapCount&&(m.minFilter=LinearFilter),m.format=t.format,m.needsUpdate=!0,r&&r(m)},t,a);return m}});export{CompressedTextureLoader};
//# sourceMappingURL=/sm/958073be9dad8df6669689a184f406a86d8ca94373b6e6a9c5d91a9cc24e8bf6.map