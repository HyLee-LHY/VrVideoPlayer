/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/loaders/ObjectLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,SphericalReflectionMapping,CubeUVReflectionMapping,CubeUVRefractionMapping,RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping,NearestFilter,NearestMipmapNearestFilter,NearestMipmapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipmapLinearFilter}from"../constants.js";import{BufferAttribute}from"../core/BufferAttribute.js";import{Color}from"../math/Color.js";import{Object3D}from"../core/Object3D.js";import{Group}from"../objects/Group.js";import{InstancedMesh}from"../objects/InstancedMesh.js";import{Sprite}from"../objects/Sprite.js";import{Points}from"../objects/Points.js";import{Line}from"../objects/Line.js";import{LineLoop}from"../objects/LineLoop.js";import{LineSegments}from"../objects/LineSegments.js";import{LOD}from"../objects/LOD.js";import{Mesh}from"../objects/Mesh.js";import{Shape}from"../extras/core/Shape.js";import{Fog}from"../scenes/Fog.js";import{FogExp2}from"../scenes/FogExp2.js";import{HemisphereLight}from"../lights/HemisphereLight.js";import{SpotLight}from"../lights/SpotLight.js";import{PointLight}from"../lights/PointLight.js";import{DirectionalLight}from"../lights/DirectionalLight.js";import{AmbientLight}from"../lights/AmbientLight.js";import{RectAreaLight}from"../lights/RectAreaLight.js";import{LightProbe}from"../lights/LightProbe.js";import{OrthographicCamera}from"../cameras/OrthographicCamera.js";import{PerspectiveCamera}from"../cameras/PerspectiveCamera.js";import{Scene}from"../scenes/Scene.js";import{CubeTexture}from"../textures/CubeTexture.js";import{Texture}from"../textures/Texture.js";import{ImageLoader}from"./ImageLoader.js";import{LoadingManager}from"./LoadingManager.js";import{AnimationClip}from"../animation/AnimationClip.js";import{MaterialLoader}from"./MaterialLoader.js";import{LoaderUtils}from"./LoaderUtils.js";import{BufferGeometryLoader}from"./BufferGeometryLoader.js";import{Loader}from"./Loader.js";import{FileLoader}from"./FileLoader.js";import*as Geometries from"../geometries/Geometries.js";import*as Curves from"../extras/curves/Curves.js";function ObjectLoader(e){Loader.call(this,e)}ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function(e,r,t,a){var i=this,o=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;var n=new FileLoader(i.manager);n.setPath(this.path),n.load(e,function(t){var o=null;try{o=JSON.parse(t)}catch(r){return void 0!==a&&a(r),void console.error("THREE:ObjectLoader: Can't parse "+e+".",r.message)}var n=o.metadata;void 0!==n&&void 0!==n.type&&"geometry"!==n.type.toLowerCase()?i.parse(o,r):console.error("THREE.ObjectLoader: Can't load "+e)},t,a)},parse:function(e,r){var t=this.parseShape(e.shapes),a=this.parseGeometries(e.geometries,t),i=this.parseImages(e.images,function(){void 0!==r&&r(s)}),o=this.parseTextures(e.textures,i),n=this.parseMaterials(e.materials,o),s=this.parseObject(e.object,a,n);return e.animations&&(s.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==r&&r(s),s},parseShape:function(e){var r={};if(void 0!==e)for(var t=0,a=e.length;t<a;t++){var i=(new Shape).fromJSON(e[t]);r[i.uuid]=i}return r},parseGeometries:function(e,r){var t={};if(void 0!==e)for(var a=new BufferGeometryLoader,i=0,o=e.length;i<o;i++){var n,s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":n=new Geometries[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":n=new Geometries[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":n=new Geometries[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":n=new Geometries[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":n=new Geometries[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":n=new Geometries[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":n=new Geometries[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":n=new Geometries[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":n=new Geometries[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":n=new Geometries[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":n=new Geometries[s.type]((new Curves[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":n=new Geometries[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":n=new Geometries[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var m=[],p=0,d=s.shapes.length;p<d;p++){var c=r[s.shapes[p]];m.push(c)}n=new Geometries[s.type](m,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(m=[],p=0,d=s.shapes.length;p<d;p++){c=r[s.shapes[p]];m.push(c)}var u=s.options.extrudePath;void 0!==u&&(s.options.extrudePath=(new Curves[u.type]).fromJSON(u)),n=new Geometries[s.type](m,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":n=a.parse(s);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}n.uuid=s.uuid,void 0!==s.name&&(n.name=s.name),!0===n.isBufferGeometry&&void 0!==s.userData&&(n.userData=s.userData),t[s.uuid]=n}return t},parseMaterials:function(e,r){var t={},a={};if(void 0!==e){var i=new MaterialLoader;i.setTextures(r);for(var o=0,n=e.length;o<n;o++){var s=e[o];if("MultiMaterial"===s.type){for(var m=[],p=0;p<s.materials.length;p++){var d=s.materials[p];void 0===t[d.uuid]&&(t[d.uuid]=i.parse(d)),m.push(t[d.uuid])}a[s.uuid]=m}else void 0===t[s.uuid]&&(t[s.uuid]=i.parse(s)),a[s.uuid]=t[s.uuid]}}return a},parseAnimations:function(e){for(var r=[],t=0;t<e.length;t++){var a=e[t],i=AnimationClip.parse(a);void 0!==a.uuid&&(i.uuid=a.uuid),r.push(i)}return r},parseImages:function(e,r){var t=this,a={};function i(e){return t.manager.itemStart(e),n.load(e,function(){t.manager.itemEnd(e)},void 0,function(){t.manager.itemError(e),t.manager.itemEnd(e)})}if(void 0!==e&&e.length>0){var o=new LoadingManager(r),n=new ImageLoader(o);n.setCrossOrigin(this.crossOrigin);for(var s=0,m=e.length;s<m;s++){var p=e[s],d=p.url;if(Array.isArray(d)){a[p.uuid]=[];for(var c=0,u=d.length;c<u;c++){var g=d[c],f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(g)?g:t.resourcePath+g;a[p.uuid].push(i(f))}}else{f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p.url)?p.url:t.resourcePath+p.url;a[p.uuid]=i(f)}}}return a},parseTextures:function(e,r){function t(e,r){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),r[e])}var a={};if(void 0!==e)for(var i=0,o=e.length;i<o;i++){var n,s=e[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===r[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),(n=Array.isArray(r[s.image])?new CubeTexture(r[s.image]):new Texture(r[s.image])).needsUpdate=!0,n.uuid=s.uuid,void 0!==s.name&&(n.name=s.name),void 0!==s.mapping&&(n.mapping=t(s.mapping,TEXTURE_MAPPING)),void 0!==s.offset&&n.offset.fromArray(s.offset),void 0!==s.repeat&&n.repeat.fromArray(s.repeat),void 0!==s.center&&n.center.fromArray(s.center),void 0!==s.rotation&&(n.rotation=s.rotation),void 0!==s.wrap&&(n.wrapS=t(s.wrap[0],TEXTURE_WRAPPING),n.wrapT=t(s.wrap[1],TEXTURE_WRAPPING)),void 0!==s.format&&(n.format=s.format),void 0!==s.type&&(n.type=s.type),void 0!==s.encoding&&(n.encoding=s.encoding),void 0!==s.minFilter&&(n.minFilter=t(s.minFilter,TEXTURE_FILTER)),void 0!==s.magFilter&&(n.magFilter=t(s.magFilter,TEXTURE_FILTER)),void 0!==s.anisotropy&&(n.anisotropy=s.anisotropy),void 0!==s.flipY&&(n.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(n.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(n.unpackAlignment=s.unpackAlignment),a[s.uuid]=n}return a},parseObject:function(e,r,t){var a;function i(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),r[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){for(var r=[],a=0,i=e.length;a<i;a++){var o=e[a];void 0===t[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),r.push(t[o])}return r}return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),t[e]}}switch(e.type){case"Scene":a=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(a.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":a=new DirectionalLight(e.color,e.intensity);break;case"PointLight":a=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var n=i(e.geometry),s=o(e.material);a=new Mesh(n,s);break;case"InstancedMesh":n=i(e.geometry),s=o(e.material);var m=e.count,p=e.instanceMatrix;(a=new InstancedMesh(n,s,m)).instanceMatrix=new BufferAttribute(new Float32Array(p.array),16);break;case"LOD":a=new LOD;break;case"Line":a=new Line(i(e.geometry),o(e.material),e.mode);break;case"LineLoop":a=new LineLoop(i(e.geometry),o(e.material));break;case"LineSegments":a=new LineSegments(i(e.geometry),o(e.material));break;case"PointCloud":case"Points":a=new Points(i(e.geometry),o(e.material));break;case"Sprite":a=new Sprite(o(e.material));break;case"Group":a=new Group;break;default:a=new Object3D}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children)for(var d=e.children,c=0;c<d.length;c++)a.add(this.parseObject(d[c],r,t));if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);for(var u=e.levels,g=0;g<u.length;g++){var f=u[g],h=a.getObjectByProperty("uuid",f.object);void 0!==h&&a.addLevel(h,f.distance)}}return a}});var TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,SphericalReflectionMapping:SphericalReflectionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};export{ObjectLoader};
//# sourceMappingURL=/sm/eb261ee3f2ceb31bf2e3297773fe851957516f817f649ff27c1447350a95962f.map