/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/geometries/TetrahedronGeometry.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Geometry}from"../core/Geometry.js";import{PolyhedronBufferGeometry}from"./PolyhedronGeometry.js";function TetrahedronGeometry(e,r){Geometry.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:r},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,r)),this.mergeVertices()}function TetrahedronBufferGeometry(e,r){PolyhedronBufferGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,r),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:r}}TetrahedronGeometry.prototype=Object.create(Geometry.prototype),TetrahedronGeometry.prototype.constructor=TetrahedronGeometry,TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;export{TetrahedronGeometry,TetrahedronBufferGeometry};
//# sourceMappingURL=/sm/174f94f8913cfa2398785bc6d161bfc7ca33df70c54839a5b289690cf52aeb76.map