/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/geometries/SphereGeometry.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Geometry}from"../core/Geometry.js";import{BufferGeometry}from"../core/BufferGeometry.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";import{Vector3}from"../math/Vector3.js";function SphereGeometry(e,t,r,o,h,i,f){Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:o,phiLength:h,thetaStart:i,thetaLength:f},this.fromBufferGeometry(new SphereBufferGeometry(e,t,r,o,h,i,f)),this.mergeVertices()}function SphereBufferGeometry(e,t,r,o,h,i,f){BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:o,phiLength:h,thetaStart:i,thetaLength:f},e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),o=void 0!==o?o:0,h=void 0!==h?h:2*Math.PI,i=void 0!==i?i:0,f=void 0!==f?f:Math.PI;var p,a,m=Math.min(i+f,Math.PI),s=0,u=[],y=new Vector3,n=new Vector3,c=[],G=[],S=[],B=[];for(a=0;a<=r;a++){var M=[],l=a/r,g=0;for(0==a&&0==i?g=.5/t:a==r&&m==Math.PI&&(g=-.5/t),p=0;p<=t;p++){var b=p/t;y.x=-e*Math.cos(o+b*h)*Math.sin(i+l*f),y.y=e*Math.cos(i+l*f),y.z=e*Math.sin(o+b*h)*Math.sin(i+l*f),G.push(y.x,y.y,y.z),n.copy(y).normalize(),S.push(n.x,n.y,n.z),B.push(b+g,1-l),M.push(s++)}u.push(M)}for(a=0;a<r;a++)for(p=0;p<t;p++){var d=u[a][p+1],v=u[a][p],w=u[a+1][p],A=u[a+1][p+1];(0!==a||i>0)&&c.push(d,v,A),(a!==r-1||m<Math.PI)&&c.push(v,w,A)}this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(G,3)),this.setAttribute("normal",new Float32BufferAttribute(S,3)),this.setAttribute("uv",new Float32BufferAttribute(B,2))}SphereGeometry.prototype=Object.create(Geometry.prototype),SphereGeometry.prototype.constructor=SphereGeometry,SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype),SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;export{SphereGeometry,SphereBufferGeometry};
//# sourceMappingURL=/sm/6ddadcf1d9a1a5dbf0e66ace0823e3341c242b916f41c9f0a2c84ea4f21ff7a0.map