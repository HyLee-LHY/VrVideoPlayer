/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/geometries/TubeGeometry.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Geometry}from"../core/Geometry.js";import{BufferGeometry}from"../core/BufferGeometry.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";import{Vector2}from"../math/Vector2.js";import{Vector3}from"../math/Vector3.js";function TubeGeometry(e,t,r,o,s,u){Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:o,closed:s},void 0!==u&&console.warn("THREE.TubeGeometry: taper has been removed.");var m=new TubeBufferGeometry(e,t,r,o,s);this.tangents=m.tangents,this.normals=m.normals,this.binormals=m.binormals,this.fromBufferGeometry(m),this.mergeVertices()}function TubeBufferGeometry(e,t,r,o,s){BufferGeometry.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:o,closed:s},t=t||64,r=r||1,o=o||8,s=s||!1;var u=e.computeFrenetFrames(t,s);this.tangents=u.tangents,this.normals=u.normals,this.binormals=u.binormals;var m,a,f=new Vector3,n=new Vector3,i=new Vector2,y=new Vector3,p=[],c=[],h=[],b=[];function l(s){y=e.getPointAt(s/t,y);var m=u.normals[s],i=u.binormals[s];for(a=0;a<=o;a++){var h=a/o*Math.PI*2,b=Math.sin(h),l=-Math.cos(h);n.x=l*m.x+b*i.x,n.y=l*m.y+b*i.y,n.z=l*m.z+b*i.z,n.normalize(),c.push(n.x,n.y,n.z),f.x=y.x+r*n.x,f.y=y.y+r*n.y,f.z=y.z+r*n.z,p.push(f.x,f.y,f.z)}}!function(){for(m=0;m<t;m++)l(m);l(!1===s?t:0),function(){for(m=0;m<=t;m++)for(a=0;a<=o;a++)i.x=m/t,i.y=a/o,h.push(i.x,i.y)}(),function(){for(a=1;a<=t;a++)for(m=1;m<=o;m++){var e=(o+1)*(a-1)+(m-1),r=(o+1)*a+(m-1),s=(o+1)*a+m,u=(o+1)*(a-1)+m;b.push(e,r,u),b.push(r,s,u)}}()}(),this.setIndex(b),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}TubeGeometry.prototype=Object.create(Geometry.prototype),TubeGeometry.prototype.constructor=TubeGeometry,TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TubeBufferGeometry.prototype.constructor=TubeBufferGeometry,TubeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e};export{TubeGeometry,TubeBufferGeometry};
//# sourceMappingURL=/sm/5af766ffc109d2b2765c60d78b827ae8962799fe7d640455ce93bb055fcdcfc8.map