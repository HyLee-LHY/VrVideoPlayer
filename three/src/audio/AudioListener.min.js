/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/audio/AudioListener.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Vector3}from"../math/Vector3.js";import{Quaternion}from"../math/Quaternion.js";import{Clock}from"../core/Clock.js";import{Object3D}from"../core/Object3D.js";import{AudioContext}from"./AudioContext.js";var _position=new Vector3,_quaternion=new Quaternion,_scale=new Vector3,_orientation=new Vector3;function AudioListener(){Object3D.call(this),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){Object3D.prototype.updateMatrixWorld.call(this,t);var i=this.context.listener,e=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position,_quaternion,_scale),_orientation.set(0,0,-1).applyQuaternion(_quaternion),i.positionX){var n=this.context.currentTime+this.timeDelta;i.positionX.linearRampToValueAtTime(_position.x,n),i.positionY.linearRampToValueAtTime(_position.y,n),i.positionZ.linearRampToValueAtTime(_position.z,n),i.forwardX.linearRampToValueAtTime(_orientation.x,n),i.forwardY.linearRampToValueAtTime(_orientation.y,n),i.forwardZ.linearRampToValueAtTime(_orientation.z,n),i.upX.linearRampToValueAtTime(e.x,n),i.upY.linearRampToValueAtTime(e.y,n),i.upZ.linearRampToValueAtTime(e.z,n)}else i.setPosition(_position.x,_position.y,_position.z),i.setOrientation(_orientation.x,_orientation.y,_orientation.z,e.x,e.y,e.z)}});export{AudioListener};
//# sourceMappingURL=/sm/fd8cb2dfc68884f266bfc62bd8a9f221021b1b2bb73692b6d02a147b34540032.map