/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/helpers/CameraHelper.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Camera}from"../cameras/Camera.js";import{Vector3}from"../math/Vector3.js";import{LineSegments}from"../objects/LineSegments.js";import{Color}from"../math/Color.js";import{LineBasicMaterial}from"../materials/LineBasicMaterial.js";import{BufferGeometry}from"../core/BufferGeometry.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";var _vector=new Vector3,_camera=new Camera;function CameraHelper(e){var t=new BufferGeometry,r=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),a=[],o=[],n={},i=new Color(16755200),c=new Color(16711680),m=new Color(43775),s=new Color(16777215),f=new Color(3355443);function p(e,t,r){u(e,r),u(t,r)}function u(e,t){a.push(0,0,0),o.push(t.r,t.g,t.b),void 0===n[e]&&(n[e]=[]),n[e].push(a.length/3-1)}p("n1","n2",i),p("n2","n4",i),p("n4","n3",i),p("n3","n1",i),p("f1","f2",i),p("f2","f4",i),p("f4","f3",i),p("f3","f1",i),p("n1","f1",i),p("n2","f2",i),p("n3","f3",i),p("n4","f4",i),p("p","n1",c),p("p","n2",c),p("p","n3",c),p("p","n4",c),p("u1","u2",m),p("u2","u3",m),p("u3","u1",m),p("c","t",s),p("p","c",f),p("cn1","cn2",f),p("cn3","cn4",f),p("cf1","cf2",f),p("cf3","cf4",f),t.setAttribute("position",new Float32BufferAttribute(a,3)),t.setAttribute("color",new Float32BufferAttribute(o,3)),LineSegments.call(this,t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=n,this.update()}function setPoint(e,t,r,a,o,n,i){_vector.set(o,n,i).unproject(a);var c=t[e];if(void 0!==c)for(var m=r.getAttribute("position"),s=0,f=c.length;s<f;s++)m.setXYZ(c[s],_vector.x,_vector.y,_vector.z)}CameraHelper.prototype=Object.create(LineSegments.prototype),CameraHelper.prototype.constructor=CameraHelper,CameraHelper.prototype.update=function(){var e=this.geometry,t=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-1,-1,-1),setPoint("n2",t,e,_camera,1,-1,-1),setPoint("n3",t,e,_camera,-1,1,-1),setPoint("n4",t,e,_camera,1,1,-1),setPoint("f1",t,e,_camera,-1,-1,1),setPoint("f2",t,e,_camera,1,-1,1),setPoint("f3",t,e,_camera,-1,1,1),setPoint("f4",t,e,_camera,1,1,1),setPoint("u1",t,e,_camera,.7,1.1,-1),setPoint("u2",t,e,_camera,-.7,1.1,-1),setPoint("u3",t,e,_camera,0,2,-1),setPoint("cf1",t,e,_camera,-1,0,1),setPoint("cf2",t,e,_camera,1,0,1),setPoint("cf3",t,e,_camera,0,-1,1),setPoint("cf4",t,e,_camera,0,1,1),setPoint("cn1",t,e,_camera,-1,0,-1),setPoint("cn2",t,e,_camera,1,0,-1),setPoint("cn3",t,e,_camera,0,-1,-1),setPoint("cn4",t,e,_camera,0,1,-1),e.getAttribute("position").needsUpdate=!0};export{CameraHelper};
//# sourceMappingURL=/sm/1ca75ca9021c3ea4ee83481a12db50cad72e65ab6e4850566d4e2551b801e09c.map