/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/objects/SkinnedMesh.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Mesh}from"./Mesh.js";import{Matrix4}from"../math/Matrix4.js";import{Vector3}from"../math/Vector3.js";import{Vector4}from"../math/Vector4.js";function SkinnedMesh(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mesh.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new Vector4,e=this.geometry.attributes.skinWeight,i=0,r=e.count;i<r;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);var n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Mesh.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)},boneTransform:function(){var t=new Vector3,e=new Vector4,i=new Vector4,r=new Vector3,n=new Matrix4;return function(o,s){var a=this.skeleton,h=this.geometry;e.fromBufferAttribute(h.attributes.skinIndex,o),i.fromBufferAttribute(h.attributes.skinWeight,o),t.fromBufferAttribute(h.attributes.position,o).applyMatrix4(this.bindMatrix),s.set(0,0,0);for(var d=0;d<4;d++){var c=i.getComponent(d);if(0!==c){var M=e.getComponent(d);n.multiplyMatrices(a.bones[M].matrixWorld,a.boneInverses[M]),s.addScaledVector(r.copy(t).applyMatrix4(n),c)}}return s.applyMatrix4(this.bindMatrixInverse)}}()});export{SkinnedMesh};
//# sourceMappingURL=/sm/139f9805728f0f5e7115234e72ddebaaf4141c8ed6d5fc01aa8b8d0d2bac2508.map