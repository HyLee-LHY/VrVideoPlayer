/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/objects/Line.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Sphere}from"../math/Sphere.js";import{Ray}from"../math/Ray.js";import{Matrix4}from"../math/Matrix4.js";import{Object3D}from"../core/Object3D.js";import{Vector3}from"../math/Vector3.js";import{LineBasicMaterial}from"../materials/LineBasicMaterial.js";import{BufferGeometry}from"../core/BufferGeometry.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";var _start=new Vector3,_end=new Vector3,_inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere;function Line(e,r,t){1===t&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==r?r:new LineBasicMaterial,this.updateMorphTargets()}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var r=e.attributes.position,t=[0],i=1,a=r.count;i<a;i++)_start.fromBufferAttribute(r,i-1),_end.fromBufferAttribute(r,i),t[i]=t[i-1],t[i]+=_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){var o=e.vertices;(t=e.lineDistances)[0]=0;for(i=1,a=o.length;i<a;i++)t[i]=t[i-1],t[i]+=o[i-1].distanceTo(o[i])}return this},raycast:function(e,r){var t=this.geometry,i=this.matrixWorld,a=e.params.Line.threshold;if(null===t.boundingSphere&&t.computeBoundingSphere(),_sphere.copy(t.boundingSphere),_sphere.applyMatrix4(i),_sphere.radius+=a,!1!==e.ray.intersectsSphere(_sphere)){_inverseMatrix.getInverse(i),_ray.copy(e.ray).applyMatrix4(_inverseMatrix);var o=a/((this.scale.x+this.scale.y+this.scale.z)/3),n=o*o,s=new Vector3,c=new Vector3,p=new Vector3,f=new Vector3,l=this&&this.isLineSegments?2:1;if(t.isBufferGeometry){var h=t.index,m=t.attributes.position.array;if(null!==h)for(var u=h.array,y=0,d=u.length-1;y<d;y+=l){var g=u[y],x=u[y+1];if(s.fromArray(m,3*g),c.fromArray(m,3*x),!(_ray.distanceSqToSegment(s,c,f,p)>n))f.applyMatrix4(this.matrixWorld),(b=e.ray.origin.distanceTo(f))<e.near||b>e.far||r.push({distance:b,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}else for(y=0,d=m.length/3-1;y<d;y+=l){if(s.fromArray(m,3*y),c.fromArray(m,3*y+3),!(_ray.distanceSqToSegment(s,c,f,p)>n))f.applyMatrix4(this.matrixWorld),(b=e.ray.origin.distanceTo(f))<e.near||b>e.far||r.push({distance:b,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else if(t.isGeometry){var v=t.vertices,T=v.length;for(y=0;y<T-1;y+=l){var b;if(!(_ray.distanceSqToSegment(v[y],v[y+1],f,p)>n))f.applyMatrix4(this.matrixWorld),(b=e.ray.origin.distanceTo(f))<e.near||b>e.far||r.push({distance:b,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}},updateMorphTargets:function(){var e,r,t,i=this.geometry;if(i.isBufferGeometry){var a=i.morphAttributes,o=Object.keys(a);if(o.length>0){var n=a[o[0]];if(void 0!==n)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,r=n.length;e<r;e++)t=n[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}else{var s=i.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});export{Line};
//# sourceMappingURL=/sm/29b614900236d91fa19f12579018bc605d15e0f98441498235848127ca2cd135.map