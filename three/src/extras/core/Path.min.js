/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/extras/core/Path.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Vector2}from"../../math/Vector2.js";import{CurvePath}from"./CurvePath.js";import{EllipseCurve}from"../curves/EllipseCurve.js";import{SplineCurve}from"../curves/SplineCurve.js";import{CubicBezierCurve}from"../curves/CubicBezierCurve.js";import{QuadraticBezierCurve}from"../curves/QuadraticBezierCurve.js";import{LineCurve}from"../curves/LineCurve.js";function Path(t){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,t&&this.setFromPoints(t)}Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var r=1,e=t.length;r<e;r++)this.lineTo(t[r].x,t[r].y);return this},moveTo:function(t,r){return this.currentPoint.set(t,r),this},lineTo:function(t,r){var e=new LineCurve(this.currentPoint.clone(),new Vector2(t,r));return this.curves.push(e),this.currentPoint.set(t,r),this},quadraticCurveTo:function(t,r,e,i){var n=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(t,r),new Vector2(e,i));return this.curves.push(n),this.currentPoint.set(e,i),this},bezierCurveTo:function(t,r,e,i,n,o){var u=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(t,r),new Vector2(e,i),new Vector2(n,o));return this.curves.push(u),this.currentPoint.set(n,o),this},splineThru:function(t){var r=[this.currentPoint.clone()].concat(t),e=new SplineCurve(r);return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,r,e,i,n,o){var u=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(t+u,r+s,e,i,n,o),this},absarc:function(t,r,e,i,n,o){return this.absellipse(t,r,e,e,i,n,o),this},ellipse:function(t,r,e,i,n,o,u,s){var c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+c,r+h,e,i,n,o,u,s),this},absellipse:function(t,r,e,i,n,o,u,s){var c=new EllipseCurve(t,r,e,i,n,o,u,s);if(this.curves.length>0){var h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var a=c.getPoint(1);return this.currentPoint.copy(a),this},copy:function(t){return CurvePath.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=CurvePath.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return CurvePath.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});export{Path};
//# sourceMappingURL=/sm/ff35b1623aeb1c81b0230762015263f4fe101d4aa1264fa8d12f4eb5c9315c0a.map