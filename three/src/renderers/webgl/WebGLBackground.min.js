/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/renderers/webgl/WebGLBackground.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{BackSide,FrontSide,CubeUVReflectionMapping}from"../../constants.js";import{BoxBufferGeometry}from"../../geometries/BoxGeometry.js";import{PlaneBufferGeometry}from"../../geometries/PlaneGeometry.js";import{ShaderMaterial}from"../../materials/ShaderMaterial.js";import{Color}from"../../math/Color.js";import{Mesh}from"../../objects/Mesh.js";import{ShaderLib}from"../shaders/ShaderLib.js";import{cloneUniforms}from"../shaders/UniformsUtils.js";function WebGLBackground(e,r,t,a){var o,n,i=new Color(0),u=0,l=null,s=0,m=null;function d(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,a)}return{getClearColor:function(){return i},setClearColor:function(e,r){i.set(e),d(i,u=void 0!==r?r:1)},getClearAlpha:function(){return u},setClearAlpha:function(e){d(i,u=e)},render:function(r,a,f,p){var h=a.background,c=e.xr,g=c.getSession&&c.getSession();if(g&&"additive"===g.environmentBlendMode&&(h=null),null===h?d(i,u):h&&h.isColor&&(d(h,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),h&&(h.isCubeTexture||h.isWebGLCubeRenderTarget||h.mapping===CubeUVReflectionMapping)){void 0===n&&((n=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({type:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),n.geometry.deleteAttribute("uv"),n.onBeforeRender=function(e,r,t){this.matrixWorld.copyPosition(t.matrixWorld)},Object.defineProperty(n.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),t.update(n));var b=h.isWebGLCubeRenderTarget?h.texture:h;n.material.uniforms.envMap.value=b,n.material.uniforms.flipEnvMap.value=b.isCubeTexture?-1:1,l===h&&s===b.version&&m===e.toneMapping||(n.material.needsUpdate=!0,l=h,s=b.version,m=e.toneMapping),r.unshift(n,n.geometry,n.material,0,0,null)}else h&&h.isTexture&&(void 0===o&&((o=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({type:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),t.update(o)),o.material.uniforms.t2D.value=h,!0===h.matrixAutoUpdate&&h.updateMatrix(),o.material.uniforms.uvTransform.value.copy(h.matrix),l===h&&s===h.version&&m===e.toneMapping||(o.material.needsUpdate=!0,l=h,s=h.version,m=e.toneMapping),r.unshift(o,o.geometry,o.material,0,0,null))}}}export{WebGLBackground};
//# sourceMappingURL=/sm/10200b7c086a52230f494bbb8d3a0cd1a7402e75633797381892121c4f15702f.map