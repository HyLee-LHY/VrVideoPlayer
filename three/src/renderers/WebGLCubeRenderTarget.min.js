/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/src/renderers/WebGLCubeRenderTarget.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{BackSide,NoBlending}from"../constants.js";import{Scene}from"../scenes/Scene.js";import{Mesh}from"../objects/Mesh.js";import{BoxBufferGeometry}from"../geometries/BoxGeometry.js";import{ShaderMaterial}from"../materials/ShaderMaterial.js";import{cloneUniforms}from"./shaders/UniformsUtils.js";import{WebGLRenderTarget}from"./WebGLRenderTarget.js";import{CubeCamera}from"../cameras/CubeCamera.js";function WebGLCubeRenderTarget(e,r,t){Number.isInteger(r)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),r=t),WebGLRenderTarget.call(this,e,e,r)}WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype),WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget,WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0,WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(e,r){this.texture.type=r.type,this.texture.format=r.format,this.texture.encoding=r.encoding;var t=new Scene,o={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#include <common>","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV = equirectUv( direction );","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},i=new ShaderMaterial({type:"CubemapFromEquirect",uniforms:cloneUniforms(o.uniforms),vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,side:BackSide,blending:NoBlending});i.uniforms.tEquirect.value=r;var n=new Mesh(new BoxBufferGeometry(5,5,5),i);return t.add(n),new CubeCamera(1,10,this).update(e,t),n.geometry.dispose(),n.material.dispose(),this};export{WebGLCubeRenderTarget};
//# sourceMappingURL=/sm/376e75574b38782e8812592779f908191d4dc61c44c35571fb3a961d579febc6.map