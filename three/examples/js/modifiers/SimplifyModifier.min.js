/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/modifiers/SimplifyModifier.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.SimplifyModifier: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.SimplifyModifier=function(){},function(){var e=new THREE.Vector3,o=new THREE.Vector3;function i(e,o){var i=e.indexOf(o);i>-1&&e.splice(i,1)}function t(e,o){var i,t,s,r=o.position.distanceTo(e.position),n=0,h=[],a=e.faces.length;for(i=0;i<a;i++)(t=e.faces[i]).hasVertex(o)&&h.push(t);for(i=0;i<a;i++){var f=1;t=e.faces[i];for(var l=0;l<h.length;l++){s=h[l];var c=t.normal.dot(s.normal);f=Math.min(f,(1.001-c)/2)}n=Math.max(n,f)}return h.length<2&&(n=1),r*n+0}function s(e){if(0===e.neighbors.length)return e.collapseNeighbor=null,void(e.collapseCost=-.01);e.collapseCost=1e5,e.collapseNeighbor=null;for(var o=0;o<e.neighbors.length;o++){var i=t(e,e.neighbors[o]);e.collapseNeighbor||(e.collapseNeighbor=e.neighbors[o],e.collapseCost=i,e.minCost=i,e.totalCost=0,e.costCount=0),e.costCount++,e.totalCost+=i,i<e.minCost&&(e.collapseNeighbor=e.neighbors[o],e.minCost=i)}e.collapseCost=e.totalCost/e.costCount}function r(e,o){for(console.assert(0===e.faces.length);e.neighbors.length;){i(e.neighbors.pop().neighbors,e)}i(o,e)}function n(e,o){i(o,e),e.v1&&i(e.v1.faces,e),e.v2&&i(e.v2.faces,e),e.v3&&i(e.v3.faces,e);for(var t,s,r=[e.v1,e.v2,e.v3],n=0;n<3;n++)s=r[(n+1)%3],(t=r[n])&&s&&(t.removeIfNonNeighbor(s),s.removeIfNonNeighbor(t))}function h(e,o,i,t){if(t){var h,a=[];for(h=0;h<i.neighbors.length;h++)a.push(i.neighbors[h]);for(h=i.faces.length-1;h>=0;h--)i.faces[h].hasVertex(t)&&n(i.faces[h],o);for(h=i.faces.length-1;h>=0;h--)i.faces[h].replaceVertex(i,t);for(r(i,e),h=0;h<a.length;h++)s(a[h])}else r(i,e)}function a(e){for(var o=e[0],i=0;i<e.length;i++)e[i].collapseCost<o.collapseCost&&(o=e[i]);return o}function f(e,o,i,t,s,r){this.a=t,this.b=s,this.c=r,this.v1=e,this.v2=o,this.v3=i,this.normal=new THREE.Vector3,this.computeNormal(),e.faces.push(this),e.addUniqueNeighbor(o),e.addUniqueNeighbor(i),o.faces.push(this),o.addUniqueNeighbor(e),o.addUniqueNeighbor(i),i.faces.push(this),i.addUniqueNeighbor(e),i.addUniqueNeighbor(o)}function l(e,o){this.position=e,this.id=o,this.faces=[],this.neighbors=[],this.collapseCost=0,this.collapseNeighbor=null}f.prototype.computeNormal=function(){var i=this.v1.position,t=this.v2.position,s=this.v3.position;e.subVectors(s,t),o.subVectors(i,t),e.cross(o).normalize(),this.normal.copy(e)},f.prototype.hasVertex=function(e){return e===this.v1||e===this.v2||e===this.v3},f.prototype.replaceVertex=function(e,o){e===this.v1?this.v1=o:e===this.v2?this.v2=o:e===this.v3&&(this.v3=o),i(e.faces,this),o.faces.push(this),e.removeIfNonNeighbor(this.v1),this.v1.removeIfNonNeighbor(e),e.removeIfNonNeighbor(this.v2),this.v2.removeIfNonNeighbor(e),e.removeIfNonNeighbor(this.v3),this.v3.removeIfNonNeighbor(e),this.v1.addUniqueNeighbor(this.v2),this.v1.addUniqueNeighbor(this.v3),this.v2.addUniqueNeighbor(this.v1),this.v2.addUniqueNeighbor(this.v3),this.v3.addUniqueNeighbor(this.v1),this.v3.addUniqueNeighbor(this.v2),this.computeNormal()},l.prototype.addUniqueNeighbor=function(e){var o,i;o=this.neighbors,i=e,-1===o.indexOf(i)&&o.push(i)},l.prototype.removeIfNonNeighbor=function(e){var o=this.neighbors,i=this.faces,t=o.indexOf(e);if(-1!==t){for(var s=0;s<i.length;s++)if(i[s].hasVertex(e))return;o.splice(t,1)}},THREE.SimplifyModifier.prototype.modify=function(e,o){e.isBufferGeometry&&(e=(new THREE.Geometry).fromBufferGeometry(e)),e.mergeVertices();var i,t,r,n=e.vertices,c=e.faces,v=[],u=[];for(i=0,t=n.length;i<t;i++){var g=new l(n[i],i);v.push(g)}for(i=0,t=c.length;i<t;i++){var p=(C=c[i]).a,d=C.b,b=C.c,m=new f(v[p],v[d],v[b],p,d,b);u.push(m)}for(i=0,t=v.length;i<t;i++)s(v[i]);for(var N=o;N--;){if(!(r=a(v))){console.log("THREE.SimplifyModifier: No next vertex");break}h(v,u,r,r.collapseNeighbor)}var E=new THREE.BufferGeometry,x=[],y=[];for(i=0;i<v.length;i++){g=v[i].position;x.push(g.x,g.y,g.z)}for(i=0;i<u.length;i++){var C=u[i];p=v.indexOf(C.v1),d=v.indexOf(C.v2),b=v.indexOf(C.v3);y.push(p,d,b)}return E.setAttribute("position",new THREE.Float32BufferAttribute(x,3)),E.setIndex(y),E}}();
//# sourceMappingURL=/sm/26c8dad352a6a48e1d66a631466c216908d236e9cf9ccda279998d48019bbc61.map