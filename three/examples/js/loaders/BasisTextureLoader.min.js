/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/loaders/BasisTextureLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.BasisTextureLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.BasisTextureLoader=function(e){THREE.Loader.call(this,e),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.workerConfig={format:null,astcSupported:!1,bptcSupported:!1,etcSupported:!1,dxtSupported:!1,pvrtcSupported:!1}},THREE.BasisTextureLoader.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:THREE.BasisTextureLoader,setTranscoderPath:function(e){return this.transcoderPath=e,this},setWorkerLimit:function(e){return this.workerLimit=e,this},detectSupport:function(e){var r=this.workerConfig;if(r.astcSupported=!!e.extensions.get("WEBGL_compressed_texture_astc"),r.bptcSupported=!!e.extensions.get("EXT_texture_compression_bptc"),r.etcSupported=!!e.extensions.get("WEBGL_compressed_texture_etc1"),r.dxtSupported=!!e.extensions.get("WEBGL_compressed_texture_s3tc"),r.pvrtcSupported=!!e.extensions.get("WEBGL_compressed_texture_pvrtc")||!!e.extensions.get("WEBKIT_WEBGL_compressed_texture_pvrtc"),r.astcSupported)r.format=THREE.BasisTextureLoader.BASIS_FORMAT.cTFASTC_4x4;else if(r.bptcSupported)r.format=THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC7_M5;else if(r.dxtSupported)r.format=THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC3;else if(r.pvrtcSupported)r.format=THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA;else{if(!r.etcSupported)throw new Error("THREE.BasisTextureLoader: No suitable compressed texture format found.");r.format=THREE.BasisTextureLoader.BASIS_FORMAT.cTFETC1}return this},load:function(e,r,t,s){var a=new THREE.FileLoader(this.manager);a.setResponseType("arraybuffer"),a.load(e,e=>{this._createTexture(e).then(r).catch(s)},t,s)},_createTexture:function(e){var r,t,s=e.byteLength,a=this._allocateWorker(s).then(s=>(r=s,t=this.workerNextTaskID++,new Promise((s,a)=>{r._callbacks[t]={resolve:s,reject:a},r.postMessage({type:"transcode",id:t,buffer:e},[e])}))).then(e=>{var r,t=this.workerConfig,{width:s,height:a,mipmaps:o,format:i}=e;switch(i){case THREE.BasisTextureLoader.BASIS_FORMAT.cTFASTC_4x4:r=new THREE.CompressedTexture(o,s,a,THREE.RGBA_ASTC_4x4_Format);break;case THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC7_M5:r=new THREE.CompressedTexture(o,s,a,THREE.RGBA_BPTC_Format);break;case THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC1:case THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC3:r=new THREE.CompressedTexture(o,s,a,THREE.BasisTextureLoader.DXT_FORMAT_MAP[t.format],THREE.UnsignedByteType);break;case THREE.BasisTextureLoader.BASIS_FORMAT.cTFETC1:r=new THREE.CompressedTexture(o,s,a,THREE.RGB_ETC1_Format);break;case THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGB:r=new THREE.CompressedTexture(o,s,a,THREE.RGB_PVRTC_4BPPV1_Format);break;case THREE.BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA:r=new THREE.CompressedTexture(o,s,a,THREE.RGBA_PVRTC_4BPPV1_Format);break;default:throw new Error("THREE.BasisTextureLoader: No supported format available.")}return r.minFilter=1===o.length?THREE.LinearFilter:THREE.LinearMipmapLinearFilter,r.magFilter=THREE.LinearFilter,r.generateMipmaps=!1,r.needsUpdate=!0,r});return a.catch(()=>!0).then(()=>{r&&t&&(r._taskLoad-=s,delete r._callbacks[t])}),a},_initTranscoder:function(){if(!this.transcoderPending){var e=new THREE.FileLoader(this.manager);e.setPath(this.transcoderPath);var r=new Promise((r,t)=>{e.load("basis_transcoder.js",r,void 0,t)}),t=new THREE.FileLoader(this.manager);t.setPath(this.transcoderPath),t.setResponseType("arraybuffer");var s=new Promise((e,r)=>{t.load("basis_transcoder.wasm",e,void 0,r)});this.transcoderPending=Promise.all([r,s]).then(([e,r])=>{var t=THREE.BasisTextureLoader.BasisWorker.toString(),s=["/* basis_transcoder.js */",e,"/* worker */",t.substring(t.indexOf("{")+1,t.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([s])),this.transcoderBinary=r})}return this.transcoderPending},_allocateWorker:function(e){return this._initTranscoder().then(()=>{var r;this.workerPool.length<this.workerLimit?((r=new Worker(this.workerSourceURL))._callbacks={},r._taskLoad=0,r.postMessage({type:"init",config:this.workerConfig,transcoderBinary:this.transcoderBinary}),r.onmessage=function(e){var t=e.data;switch(t.type){case"transcode":r._callbacks[t.id].resolve(t);break;case"error":r._callbacks[t.id].reject(t);break;default:console.error('THREE.BasisTextureLoader: Unexpected message, "'+t.type+'"')}},this.workerPool.push(r)):this.workerPool.sort(function(e,r){return e._taskLoad>r._taskLoad?-1:1});return(r=this.workerPool[this.workerPool.length-1])._taskLoad+=e,r})},dispose:function(){for(var e=0;e<this.workerPool.length;e++)this.workerPool[e].terminate();return this.workerPool.length=0,this}}),THREE.BasisTextureLoader.BASIS_FORMAT={cTFETC1:0,cTFETC2:1,cTFBC1:2,cTFBC3:3,cTFBC4:4,cTFBC5:5,cTFBC7_M6_OPAQUE_ONLY:6,cTFBC7_M5:7,cTFPVRTC1_4_RGB:8,cTFPVRTC1_4_RGBA:9,cTFASTC_4x4:10,cTFATC_RGB:11,cTFATC_RGBA_INTERPOLATED_ALPHA:12,cTFRGBA32:13,cTFRGB565:14,cTFBGR565:15,cTFRGBA4444:16},THREE.BasisTextureLoader.DXT_FORMAT={COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779},THREE.BasisTextureLoader.DXT_FORMAT_MAP={},THREE.BasisTextureLoader.DXT_FORMAT_MAP[THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC1]=THREE.BasisTextureLoader.DXT_FORMAT.COMPRESSED_RGB_S3TC_DXT1_EXT,THREE.BasisTextureLoader.DXT_FORMAT_MAP[THREE.BasisTextureLoader.BASIS_FORMAT.cTFBC3]=THREE.BasisTextureLoader.DXT_FORMAT.COMPRESSED_RGBA_S3TC_DXT5_EXT,THREE.BasisTextureLoader.BasisWorker=function(){var e,r,t;onmessage=function(s){var a,o,i=s.data;switch(i.type){case"init":e=i.config,a=i.transcoderBinary,r=new Promise(e=>{o={wasmBinary:a,onRuntimeInitialized:e},BASIS(o)}).then(()=>{var{BasisFile:e,initializeBasis:r}=o;t=e,r()});break;case"transcode":r.then(()=>{try{for(var{width:r,height:s,hasAlpha:a,mipmaps:o,format:T}=function(r){var s=new t(new Uint8Array(r)),a=s.getImageWidth(0,0),o=s.getImageHeight(0,0),i=s.getNumLevels(0),T=s.getHasAlpha();function n(){s.close(),s.delete()}if(!T)switch(e.format){case 9:e.format=8}if(!a||!o||!i)throw n(),new Error("THREE.BasisTextureLoader:  Invalid .basis file");if(!s.startTranscoding())throw n(),new Error("THREE.BasisTextureLoader: .startTranscoding failed");for(var d=[],c=0;c<i;c++){var E=s.getImageWidth(0,c),_=s.getImageHeight(0,c),u=new Uint8Array(s.getImageTranscodedSizeInBytes(0,c,e.format)),R=s.transcodeImage(u,0,c,e.format,0,T);if(!R)throw n(),new Error("THREE.BasisTextureLoader: .transcodeImage failed.");d.push({data:u,width:E,height:_})}return n(),{width:a,height:o,hasAlpha:T,mipmaps:d,format:e.format}}(i.buffer),n=[],d=0;d<o.length;++d)n.push(o[d].data.buffer);self.postMessage({type:"transcode",id:i.id,width:r,height:s,hasAlpha:a,mipmaps:o,format:T},n)}catch(e){console.error(e),self.postMessage({type:"error",id:i.id,error:e.message})}})}}};
//# sourceMappingURL=/sm/b7b55032623e41108c8c71b9505de48df8590791f771a37817eecc776ce48dad.map