/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/loaders/PCDLoader.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.PCDLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.PCDLoader=function(e){THREE.Loader.call(this,e),this.littleEndian=!0},THREE.PCDLoader.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:THREE.PCDLoader,load:function(e,t,i,r){var n=this,s=new THREE.FileLoader(n.manager);s.setPath(n.path),s.setResponseType("arraybuffer"),s.load(e,function(i){try{t(n.parse(i,e))}catch(t){r?r(t):console.error(t),n.manager.itemError(e)}},i,r)},parse:function(e,t){var i=THREE.LoaderUtils.decodeText(new Uint8Array(e)),r=function(e){var t={},i=e.search(/[\r\n]DATA\s(\S*)\s/i),r=/[\r\n]DATA\s(\S*)\s/i.exec(e.substr(i-1));if(t.data=r[1],t.headerLen=r[0].length+i,t.str=e.substr(0,t.headerLen),t.str=t.str.replace(/\#.*/gi,""),t.version=/VERSION (.*)/i.exec(t.str),t.fields=/FIELDS (.*)/i.exec(t.str),t.size=/SIZE (.*)/i.exec(t.str),t.type=/TYPE (.*)/i.exec(t.str),t.count=/COUNT (.*)/i.exec(t.str),t.width=/WIDTH (.*)/i.exec(t.str),t.height=/HEIGHT (.*)/i.exec(t.str),t.viewpoint=/VIEWPOINT (.*)/i.exec(t.str),t.points=/POINTS (.*)/i.exec(t.str),null!==t.version&&(t.version=parseFloat(t.version[1])),null!==t.fields&&(t.fields=t.fields[1].split(" ")),null!==t.type&&(t.type=t.type[1].split(" ")),null!==t.width&&(t.width=parseInt(t.width[1])),null!==t.height&&(t.height=parseInt(t.height[1])),null!==t.viewpoint&&(t.viewpoint=t.viewpoint[1]),null!==t.points&&(t.points=parseInt(t.points[1],10)),null===t.points&&(t.points=t.width*t.height),null!==t.size&&(t.size=t.size[1].split(" ").map(function(e){return parseInt(e,10)})),null!==t.count)t.count=t.count[1].split(" ").map(function(e){return parseInt(e,10)});else{t.count=[];for(var n=0,s=t.fields.length;n<s;n++)t.count.push(1)}t.offset={};var o=0;for(n=0,s=t.fields.length;n<s;n++)"ascii"===t.data?t.offset[t.fields[n]]=n:(t.offset[t.fields[n]]=o,o+=t.size[n]*t.count[n]);return t.rowSize=o,t}(i),n=[],s=[],o=[];if("ascii"===r.data)for(var a=r.offset,l=i.substr(r.headerLen).split("\n"),p=0,h=l.length;p<h;p++)if(""!==l[p]){var d=l[p].split(" ");if(void 0!==a.x&&(n.push(parseFloat(d[a.x])),n.push(parseFloat(d[a.y])),n.push(parseFloat(d[a.z]))),void 0!==a.rgb){var u=parseFloat(d[a.rgb]),f=u>>16&255,E=u>>8&255,c=u>>0&255;o.push(f/255,E/255,c/255)}void 0!==a.normal_x&&(s.push(parseFloat(d[a.normal_x])),s.push(parseFloat(d[a.normal_y])),s.push(parseFloat(d[a.normal_z])))}if("binary_compressed"===r.data){var g=new Uint32Array(e.slice(r.headerLen,r.headerLen+8)),w=g[0],v=g[1],m=function(e,t){var i,r,n,s=e.length,o=new Uint8Array(t),a=0,l=0;do{if((i=e[a++])<32){if(l+ ++i>t)throw new Error("Output buffer is not large enough");if(a+i>s)throw new Error("Invalid compressed data");do{o[l++]=e[a++]}while(--i)}else{if(r=i>>5,n=l-((31&i)<<8)-1,a>=s)throw new Error("Invalid compressed data");if(7===r&&(r+=e[a++],a>=s))throw new Error("Invalid compressed data");if(n-=e[a++],l+r+2>t)throw new Error("Output buffer is not large enough");if(n<0)throw new Error("Invalid compressed data");if(n>=l)throw new Error("Invalid compressed data");do{o[l++]=o[n++]}while(2+--r)}}while(a<s);return o}(new Uint8Array(e,r.headerLen+8,w),v),b=new DataView(m.buffer);for(a=r.offset,p=0;p<r.points;p++)void 0!==a.x&&(n.push(b.getFloat32(r.points*a.x+r.size[0]*p,this.littleEndian)),n.push(b.getFloat32(r.points*a.y+r.size[1]*p,this.littleEndian)),n.push(b.getFloat32(r.points*a.z+r.size[2]*p,this.littleEndian))),void 0!==a.rgb&&(o.push(b.getUint8(r.points*a.rgb+r.size[3]*p+0)/255),o.push(b.getUint8(r.points*a.rgb+r.size[3]*p+1)/255),o.push(b.getUint8(r.points*a.rgb+r.size[3]*p+2)/255)),void 0!==a.normal_x&&(s.push(b.getFloat32(r.points*a.normal_x+r.size[4]*p,this.littleEndian)),s.push(b.getFloat32(r.points*a.normal_y+r.size[5]*p,this.littleEndian)),s.push(b.getFloat32(r.points*a.normal_z+r.size[6]*p,this.littleEndian)))}if("binary"===r.data){b=new DataView(e,r.headerLen),a=r.offset,p=0;for(var x=0;p<r.points;p++,x+=r.rowSize)void 0!==a.x&&(n.push(b.getFloat32(x+a.x,this.littleEndian)),n.push(b.getFloat32(x+a.y,this.littleEndian)),n.push(b.getFloat32(x+a.z,this.littleEndian))),void 0!==a.rgb&&(o.push(b.getUint8(x+a.rgb+2)/255),o.push(b.getUint8(x+a.rgb+1)/255),o.push(b.getUint8(x+a.rgb+0)/255)),void 0!==a.normal_x&&(s.push(b.getFloat32(x+a.normal_x,this.littleEndian)),s.push(b.getFloat32(x+a.normal_y,this.littleEndian)),s.push(b.getFloat32(x+a.normal_z,this.littleEndian)))}var F=new THREE.BufferGeometry;n.length>0&&F.setAttribute("position",new THREE.Float32BufferAttribute(n,3)),s.length>0&&F.setAttribute("normal",new THREE.Float32BufferAttribute(s,3)),o.length>0&&F.setAttribute("color",new THREE.Float32BufferAttribute(o,3)),F.computeBoundingSphere();var T=new THREE.PointsMaterial({size:.005});o.length>0?T.vertexColors=!0:T.color.setHex(16777215*Math.random());var y=new THREE.Points(F,T),z=t.split("").reverse().join("");return z=(z=/([^\/]*)/.exec(z))[1].split("").reverse().join(""),y.name=z,y}});
//# sourceMappingURL=/sm/2286a01820f5e82e4dea1b3075e8cad718a6e5730c21f8eb020f6163fd3b51db.map