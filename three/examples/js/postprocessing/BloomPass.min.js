/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/postprocessing/BloomPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.BloomPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.BloomPass=function(e,r,t,o){THREE.Pass.call(this),e=void 0!==e?e:1,r=void 0!==r?r:25,t=void 0!==t?t:4,o=void 0!==o?o:256;var n={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetX=new THREE.WebGLRenderTarget(o,o,n),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new THREE.WebGLRenderTarget(o,o,n),this.renderTargetY.texture.name="BloomPass.y",void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var s=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(s.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0}),void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");var i=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(i.uniforms),this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(t),this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,defines:{KERNEL_SIZE_FLOAT:r.toFixed(1),KERNEL_SIZE_INT:r.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new THREE.Pass.FullScreenQuad(null)},THREE.BloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.BloomPass,render:function(e,r,t,o,n){n&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=t.texture,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,n&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e)}}),THREE.BloomPass.blurX=new THREE.Vector2(.001953125,0),THREE.BloomPass.blurY=new THREE.Vector2(0,.001953125);
//# sourceMappingURL=/sm/28781cecedf724221cefd7184dbed0c13b5efd9f78352912f8d2aa76a32dc18c.map