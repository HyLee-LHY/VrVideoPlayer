/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/postprocessing/SSAARenderPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.SSAARenderPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.SSAARenderPass=function(e,r,t,a){THREE.Pass.call(this),this.scene=e,this.camera=r,this.sampleLevel=4,this.unbiased=!0,this.clearColor=void 0!==t?t:0,this.clearAlpha=void 0!==a?a:0,void 0===THREE.CopyShader&&console.error("THREE.SSAARenderPass relies on THREE.CopyShader");var s=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(s.uniforms),this.copyMaterial=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,premultipliedAlpha:!0,transparent:!0,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1}),this.fsQuad=new THREE.Pass.FullScreenQuad(this.copyMaterial)},THREE.SSAARenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.SSAARenderPass,dispose:function(){this.sampleRenderTarget&&(this.sampleRenderTarget.dispose(),this.sampleRenderTarget=null)},setSize:function(e,r){this.sampleRenderTarget&&this.sampleRenderTarget.setSize(e,r)},render:function(e,r,t){this.sampleRenderTarget||(this.sampleRenderTarget=new THREE.WebGLRenderTarget(t.width,t.height,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.sampleRenderTarget.texture.name="SSAARenderPass.sample");var a=THREE.SSAARenderPass.JitterVectors[Math.max(0,Math.min(this.sampleLevel,5))],s=e.autoClear;e.autoClear=!1;var i=e.getClearColor().getHex(),n=e.getClearAlpha(),l=1/a.length;this.copyUniforms.tDiffuse.value=this.sampleRenderTarget.texture;for(var o=t.width,h=t.height,d=0;d<a.length;d++){var c=a[d];this.camera.setViewOffset&&this.camera.setViewOffset(o,h,.0625*c[0],.0625*c[1],o,h);var m=l;if(this.unbiased)m+=1/32*((d+.5)/a.length-.5);this.copyUniforms.opacity.value=m,e.setClearColor(this.clearColor,this.clearAlpha),e.setRenderTarget(this.sampleRenderTarget),e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(this.renderToScreen?null:r),0===d&&(e.setClearColor(0,0),e.clear()),this.fsQuad.render(e)}this.camera.clearViewOffset&&this.camera.clearViewOffset(),e.autoClear=s,e.setClearColor(i,n)}}),THREE.SSAARenderPass.JitterVectors=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]];
//# sourceMappingURL=/sm/bd4f3d97b5196fb31f2ba023f3526598eebebfeb6bfb02fa265cfa7e8522a2cf.map