/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/postprocessing/SSAOPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.SSAOPass: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.SSAOPass=function(e,r,a,t){THREE.Pass.call(this),this.width=void 0!==a?a:512,this.height=void 0!==t?t:512,this.clear=!0,this.camera=r,this.scene=e,this.kernelRadius=8,this.kernelSize=32,this.kernel=[],this.noiseTexture=null,this.output=0,this.minDistance=.005,this.maxDistance=.1,this.generateSampleKernel(),this.generateRandomKernelRotations();var i=new THREE.DepthTexture;i.type=THREE.UnsignedShortType,i.minFilter=THREE.NearestFilter,i.maxFilter=THREE.NearestFilter,this.beautyRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,depthTexture:i,depthBuffer:!0}),this.normalRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.ssaoRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.blurRenderTarget=this.ssaoRenderTarget.clone(),void 0===THREE.SSAOShader&&console.error("THREE.SSAOPass: The pass relies on THREE.SSAOShader."),this.ssaoMaterial=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSAOShader.defines),uniforms:THREE.UniformsUtils.clone(THREE.SSAOShader.uniforms),vertexShader:THREE.SSAOShader.vertexShader,fragmentShader:THREE.SSAOShader.fragmentShader,blending:THREE.NoBlending}),this.ssaoMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssaoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssaoMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.ssaoMaterial.uniforms.tNoise.value=this.noiseTexture,this.ssaoMaterial.uniforms.kernel.value=this.kernel,this.ssaoMaterial.uniforms.cameraNear.value=this.camera.near,this.ssaoMaterial.uniforms.cameraFar.value=this.camera.far,this.ssaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.getInverse(this.camera.projectionMatrix),this.normalMaterial=new THREE.MeshNormalMaterial,this.normalMaterial.blending=THREE.NoBlending,this.blurMaterial=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSAOBlurShader.defines),uniforms:THREE.UniformsUtils.clone(THREE.SSAOBlurShader.uniforms),vertexShader:THREE.SSAOBlurShader.vertexShader,fragmentShader:THREE.SSAOBlurShader.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSAODepthShader.defines),uniforms:THREE.UniformsUtils.clone(THREE.SSAODepthShader.uniforms),vertexShader:THREE.SSAODepthShader.vertexShader,fragmentShader:THREE.SSAODepthShader.fragmentShader,blending:THREE.NoBlending}),this.depthRenderMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(THREE.CopyShader.uniforms),vertexShader:THREE.CopyShader.vertexShader,fragmentShader:THREE.CopyShader.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:THREE.DstColorFactor,blendDst:THREE.ZeroFactor,blendEquation:THREE.AddEquation,blendSrcAlpha:THREE.DstAlphaFactor,blendDstAlpha:THREE.ZeroFactor,blendEquationAlpha:THREE.AddEquation}),this.fsQuad=new THREE.Pass.FullScreenQuad(null),this.originalClearColor=new THREE.Color},THREE.SSAOPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.SSAOPass,dispose:function(){this.beautyRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.ssaoRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.normalMaterial.dispose(),this.blurMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()},render:function(e,r){switch(e.setRenderTarget(this.beautyRenderTarget),e.clear(),e.render(this.scene,this.camera),this.renderOverride(e,this.normalMaterial,this.normalRenderTarget,7829503,1),this.ssaoMaterial.uniforms.kernelRadius.value=this.kernelRadius,this.ssaoMaterial.uniforms.minDistance.value=this.minDistance,this.ssaoMaterial.uniforms.maxDistance.value=this.maxDistance,this.renderPass(e,this.ssaoMaterial,this.ssaoRenderTarget),this.renderPass(e,this.blurMaterial,this.blurRenderTarget),this.output){case THREE.SSAOPass.OUTPUT.SSAO:this.copyMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case THREE.SSAOPass.OUTPUT.Blur:this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case THREE.SSAOPass.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case THREE.SSAOPass.OUTPUT.Depth:this.renderPass(e,this.depthRenderMaterial,this.renderToScreen?null:r);break;case THREE.SSAOPass.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;case THREE.SSAOPass.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r),this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=THREE.CustomBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:r);break;default:console.warn("THREE.SSAOPass: Unknown output type.")}},renderPass:function(e,r,a,t,i){this.originalClearColor.copy(e.getClearColor());var s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(a),e.autoClear=!1,null!=t&&(e.setClearColor(t),e.setClearAlpha(i||0),e.clear()),this.fsQuad.material=r,this.fsQuad.render(e),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)},renderOverride:function(e,r,a,t,i){this.originalClearColor.copy(e.getClearColor());var s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(a),e.autoClear=!1,t=r.clearColor||t,i=r.clearAlpha||i,null!=t&&(e.setClearColor(t),e.setClearAlpha(i||0),e.clear()),this.scene.overrideMaterial=r,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)},setSize:function(e,r){this.width=e,this.height=r,this.beautyRenderTarget.setSize(e,r),this.ssaoRenderTarget.setSize(e,r),this.normalRenderTarget.setSize(e,r),this.blurRenderTarget.setSize(e,r),this.ssaoMaterial.uniforms.resolution.value.set(e,r),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.getInverse(this.camera.projectionMatrix),this.blurMaterial.uniforms.resolution.value.set(e,r)},generateSampleKernel:function(){for(var e=this.kernelSize,r=this.kernel,a=0;a<e;a++){var t=new THREE.Vector3;t.x=2*Math.random()-1,t.y=2*Math.random()-1,t.z=Math.random(),t.normalize();var i=a/e;i=THREE.MathUtils.lerp(.1,1,i*i),t.multiplyScalar(i),r.push(t)}},generateRandomKernelRotations:function(){void 0===THREE.SimplexNoise&&console.error("THREE.SSAOPass: The pass relies on THREE.SimplexNoise.");for(var e=new THREE.SimplexNoise,r=new Float32Array(64),a=0;a<16;a++){var t=4*a,i=2*Math.random()-1,s=2*Math.random()-1,n=e.noise3d(i,s,0);r[t]=n,r[t+1]=n,r[t+2]=n,r[t+3]=1}this.noiseTexture=new THREE.DataTexture(r,4,4,THREE.RGBAFormat,THREE.FloatType),this.noiseTexture.wrapS=THREE.RepeatWrapping,this.noiseTexture.wrapT=THREE.RepeatWrapping}}),THREE.SSAOPass.OUTPUT={Default:0,SSAO:1,Blur:2,Beauty:3,Depth:4,Normal:5};
//# sourceMappingURL=/sm/2ade926c71c7f7fcf0ddddd834b9113718011be6930628b29cdf1afb49316686.map