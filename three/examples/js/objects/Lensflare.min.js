/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/objects/Lensflare.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.Lensflare: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.Lensflare=function(){THREE.Mesh.call(this,THREE.Lensflare.Geometry,new THREE.MeshBasicMaterial({opacity:0,transparent:!0})),this.type="Lensflare",this.frustumCulled=!1,this.renderOrder=1/0;var e=new THREE.Vector3,i=new THREE.Vector3,t=new THREE.DataTexture(new Uint8Array(768),16,16,THREE.RGBFormat);t.minFilter=THREE.NearestFilter,t.magFilter=THREE.NearestFilter,t.wrapS=THREE.ClampToEdgeWrapping,t.wrapT=THREE.ClampToEdgeWrapping;var r=new THREE.DataTexture(new Uint8Array(768),16,16,THREE.RGBFormat);r.minFilter=THREE.NearestFilter,r.magFilter=THREE.NearestFilter,r.wrapS=THREE.ClampToEdgeWrapping,r.wrapT=THREE.ClampToEdgeWrapping;var n=THREE.Lensflare.Geometry,o=new THREE.RawShaderMaterial({uniforms:{scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","attribute vec3 position;","void main() {","\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","void main() {","\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );","}"].join("\n"),depthTest:!0,depthWrite:!1,transparent:!1}),a=new THREE.RawShaderMaterial({uniforms:{map:{value:t},scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","attribute vec3 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","\tvUV = uv;","\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","uniform sampler2D map;","varying vec2 vUV;","void main() {","\tgl_FragColor = texture2D( map, vUV );","}"].join("\n"),depthTest:!1,depthWrite:!1,transparent:!1}),s=new THREE.Mesh(n,o),l=[],c=THREE.LensflareElement.Shader,u=new THREE.RawShaderMaterial({uniforms:{map:{value:null},occlusionMap:{value:r},color:{value:new THREE.Color(16777215)},scale:{value:new THREE.Vector2},screenPosition:{value:new THREE.Vector3}},vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0,depthWrite:!1}),v=new THREE.Mesh(n,u);this.addElement=function(e){l.push(e)};var p=new THREE.Vector2,E=new THREE.Vector2,f=new THREE.Box2,d=new THREE.Vector4;this.onBeforeRender=function(c,m,T){c.getCurrentViewport(d);var y=d.w/d.z,h=d.z/2,R=d.w/2,x=16/d.w;if(p.set(x*y,x),f.min.set(d.x,d.y),f.max.set(d.x+(d.z-16),d.y+(d.w-16)),i.setFromMatrixPosition(this.matrixWorld),i.applyMatrix4(T.matrixWorldInverse),!(i.z>0)&&(e.copy(i).applyMatrix4(T.projectionMatrix),E.x=d.x+e.x*h+h-8,E.y=d.y+e.y*R+R-8,f.containsPoint(E))){c.copyFramebufferToTexture(E,t),(M=o.uniforms).scale.value=p,M.screenPosition.value=e,c.renderBufferDirect(T,null,n,o,s,null),c.copyFramebufferToTexture(E,r),(M=a.uniforms).scale.value=p,M.screenPosition.value=e,c.renderBufferDirect(T,null,n,a,s,null);for(var g=2*-e.x,H=2*-e.y,w=0,b=l.length;w<b;w++){var M,P=l[w];(M=u.uniforms).color.value.copy(P.color),M.map.value=P.texture,M.screenPosition.value.x=e.x+g*P.distance,M.screenPosition.value.y=e.y+H*P.distance;x=P.size/d.w,y=d.w/d.z;M.scale.value.set(x*y,x),u.uniformsNeedUpdate=!0,c.renderBufferDirect(T,null,n,u,v,null)}}},this.dispose=function(){o.dispose(),a.dispose(),u.dispose(),t.dispose(),r.dispose();for(var e=0,i=l.length;e<i;e++)l[e].texture.dispose()}},THREE.Lensflare.prototype=Object.create(THREE.Mesh.prototype),THREE.Lensflare.prototype.constructor=THREE.Lensflare,THREE.Lensflare.prototype.isLensflare=!0,THREE.LensflareElement=function(e,i,t,r){this.texture=e,this.size=i||1,this.distance=t||0,this.color=r||new THREE.Color(16777215)},THREE.LensflareElement.Shader={uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:["precision highp float;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform sampler2D occlusionMap;","attribute vec3 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position.xy;","\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\tvVisibility =        visibility.r / 9.0;","\tvVisibility *= 1.0 - visibility.g / 9.0;","\tvVisibility *=       visibility.b / 9.0;","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","uniform sampler2D map;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvec4 texture = texture2D( map, vUV );","\ttexture.a *= vVisibility;","\tgl_FragColor = texture;","\tgl_FragColor.rgb *= color;","}"].join("\n")},THREE.Lensflare.Geometry=function(){var e=new THREE.BufferGeometry,i=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),t=new THREE.InterleavedBuffer(i,5);return e.setIndex([0,1,2,0,2,3]),e.setAttribute("position",new THREE.InterleavedBufferAttribute(t,3,0,!1)),e.setAttribute("uv",new THREE.InterleavedBufferAttribute(t,2,3,!1)),e}();
//# sourceMappingURL=/sm/0e79b6a295d6240fe376cc34e69a2981d616d3cd2e119258c38b07d6acd901d2.map