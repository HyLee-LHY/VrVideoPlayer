/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/js/exporters/ColladaExporter.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
console.warn("THREE.ColladaExporter: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.ColladaExporter=function(){},THREE.ColladaExporter.prototype={constructor:THREE.ColladaExporter,parse:function(e,r,t){t=t||{},""!==(t=Object.assign({version:"1.4.1",author:null,textureDirectory:""},t)).textureDirectory&&(t.textureDirectory=`${t.textureDirectory}/`.replace(/\\/g,"/").replace(/\/+/g,"/"));var a,i,n=t.version;if("1.4.1"!==n&&"1.5.0"!==n)return console.warn(`ColladaExporter : Version ${n} not supported for export. Only 1.4.1 and 1.5.0.`),null;function o(e,r){return a=a||document.createElement("canvas"),i=i||a.getContext("2d"),a.width=e.naturalWidth,a.height=e.naturalHeight,i.drawImage(e,0,0),function(e){for(var r=atob(e),t=new Uint8Array(r.length),a=0,i=t.length;a<i;a++)t[a]=r.charCodeAt(a);return t}(a.toDataURL(`image/${r}`,1).replace(/^data:image\/(png|jpg);base64,/,""))}var s,u=["getX","getY","getZ","getW"];function l(e){if(e.isInterleavedBufferAttribute){for(var r=new e.array.constructor(e.count*e.itemSize),t=e.itemSize,a=0,i=e.count;a<i;a++)for(var n=0;n<t;n++)r[a*t+n]=e[u[n]](a);return r}return e.array}function c(e,r,t,a){var i=l(e);return`<source id="${r}">`+`<float_array id="${r}-array" count="${i.length}">`+i.join(" ")+"</float_array><technique_common>"+`<accessor source="#${r}-array" count="${Math.floor(i.length/e.itemSize)}" stride="${e.itemSize}">`+t.map(e=>`<param name="${e}" type="${a}" />`).join("")+"</accessor></technique_common></source>"}function m(e){var r=d.get(e);if(null==r){r=`image-${g.length+1}`;var a=e.name||r,i=`<image id="${r}" name="${a}">`;i+="1.5.0"===n?`<init_from><ref>${t.textureDirectory}${a}.png</ref></init_from>`:`<init_from>${t.textureDirectory}${a}.png</init_from>`,i+="</image>",g.push(i),d.set(e,r),$.push({directory:t.textureDirectory,name:a,ext:"png",data:o(e.image,"png"),original:e})}return r}var p=new WeakMap,f=new WeakMap,d=new WeakMap,$=[],g=[],h=[],y=[],v=[],E=function e(r){var t=`<node name="${r.name}">`;if(t+=function(e){return e.updateMatrix(),(s=s||new THREE.Matrix4).copy(e.matrix),s.transpose(),`<matrix>${s.toArray().join(" ")}</matrix>`}(r),r instanceof THREE.Mesh&&null!=r.geometry){var a=function(e){var r,t,a,i=p.get(e);if(!i){var n=e;n instanceof THREE.Geometry&&(n=(new THREE.BufferGeometry).fromGeometry(n));var o=`Mesh${h.length+1}`,s=n.index?n.index.count*n.index.itemSize:n.attributes.position.count,u=null!=n.groups&&0!==n.groups.length?n.groups:[{start:0,count:s,materialIndex:0}],m=`<geometry id="${o}"${e.name?` name="${e.name}"`:""}><mesh>`,f=`${o}-position`,d=`${o}-vertices`;m+=c(n.attributes.position,f,["X","Y","Z"],"float"),m+=`<vertices id="${d}"><input semantic="POSITION" source="#${f}" /></vertices>`;var $=`<input semantic="VERTEX" source="#${d}" offset="0" />`;if("normal"in n.attributes){var g=`${o}-normal`;m+=c(n.attributes.normal,g,["X","Y","Z"],"float"),$+=`<input semantic="NORMAL" source="#${g}" offset="0" />`}if("uv"in n.attributes){var y=`${o}-texcoord`;m+=c(n.attributes.uv,y,["S","T"],"float"),$+=`<input semantic="TEXCOORD" source="#${y}" offset="0" set="0" />`}if("uv2"in n.attributes&&(y=`${o}-texcoord2`,m+=c(n.attributes.uv2,y,["S","T"],"float"),$+=`<input semantic="TEXCOORD" source="#${y}" offset="0" set="1" />`),"color"in n.attributes){var v=`${o}-color`;m+=c(n.attributes.color,v,["X","Y","Z"],"uint8"),$+=`<input semantic="COLOR" source="#${v}" offset="0" />`}var E=null;if(n.index)E=l(n.index);else for(var _=0,x=(E=new Array(s)).length;_<x;_++)E[_]=_;for(_=0,x=u.length;_<x;_++){var b=u[_],w=(r=E,t=b.start,a=b.count,Array.isArray(r)?r.slice(t,t+a):new r.constructor(r.buffer,t*r.BYTES_PER_ELEMENT,a)),M=w.length/3;m+=`<triangles material="MESH_MATERIAL_${b.materialIndex}" count="${M}">`,m+=$,m+=`<p>${w.join(" ")}</p>`,m+="</triangles>"}m+="</mesh></geometry>",h.push(m),i={meshid:o,bufferGeometry:n},p.set(e,i)}return i}(r.geometry),i=a.meshid,n=a.bufferGeometry,o=null,u=r.material||new THREE.MeshBasicMaterial,d=Array.isArray(u)?u:[u];o=(n.groups.length>d.length?new Array(n.groups.length):new Array(d.length)).fill().map((e,r)=>(function(e){var r=f.get(e);if(null==r){r=`Mat${y.length+1}`;var t="phong";e instanceof THREE.MeshLambertMaterial?t="lambert":e instanceof THREE.MeshBasicMaterial&&(t="constant",null!==e.map&&console.warn("ColladaExporter: Texture maps not supported with MeshBasicMaterial."));var a=e.emissive?e.emissive:new THREE.Color(0,0,0),i=e.color?e.color:new THREE.Color(0,0,0),n=e.specular?e.specular:new THREE.Color(1,1,1),o=e.shininess||0,s=e.reflectivity||0,u="";!0===e.transparent&&(u+="<transparent>"+(e.map?'<texture texture="diffuse-sampler"></texture>':"<float>1</float>")+"</transparent>",e.opacity<1&&(u+=`<transparency><float>${e.opacity}</float></transparency>`));var l=`<technique sid="common"><${t}>`+"<emission>"+(e.emissiveMap?'<texture texture="emissive-sampler" texcoord="TEXCOORD" />':`<color sid="emission">${a.r} ${a.g} ${a.b} 1</color>`)+"</emission>"+("constant"!==t?"<diffuse>"+(e.map?'<texture texture="diffuse-sampler" texcoord="TEXCOORD" />':`<color sid="diffuse">${i.r} ${i.g} ${i.b} 1</color>`)+"</diffuse>":"")+("constant"!==t?"<bump>"+(e.normalMap?'<texture texture="bump-sampler" texcoord="TEXCOORD" />':"")+"</bump>":"")+("phong"===t?`<specular><color sid="specular">${n.r} ${n.g} ${n.b} 1</color></specular>`+"<shininess>"+(e.specularMap?'<texture texture="specular-sampler" texcoord="TEXCOORD" />':`<float sid="shininess">${o}</float>`)+"</shininess>":"")+`<reflective><color>${i.r} ${i.g} ${i.b} 1</color></reflective>`+`<reflectivity><float>${s}</float></reflectivity>`+u+`</${t}></technique>`,c=`<effect id="${r}-effect">`+"<profile_COMMON>"+(e.map?'<newparam sid="diffuse-surface"><surface type="2D">'+`<init_from>${m(e.map)}</init_from>`+'</surface></newparam><newparam sid="diffuse-sampler"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>':"")+(e.specularMap?'<newparam sid="specular-surface"><surface type="2D">'+`<init_from>${m(e.specularMap)}</init_from>`+'</surface></newparam><newparam sid="specular-sampler"><sampler2D><source>specular-surface</source></sampler2D></newparam>':"")+(e.emissiveMap?'<newparam sid="emissive-surface"><surface type="2D">'+`<init_from>${m(e.emissiveMap)}</init_from>`+'</surface></newparam><newparam sid="emissive-sampler"><sampler2D><source>emissive-surface</source></sampler2D></newparam>':"")+(e.normalMap?'<newparam sid="bump-surface"><surface type="2D">'+`<init_from>${m(e.normalMap)}</init_from>`+'</surface></newparam><newparam sid="bump-sampler"><sampler2D><source>bump-surface</source></sampler2D></newparam>':"")+l+(e.side===THREE.DoubleSide?'<extra><technique profile="THREEJS"><double_sided sid="double_sided" type="int">1</double_sided></technique></extra>':"")+"</profile_COMMON></effect>",p=`<material id="${r}"${e.name?` name="${e.name}"`:""}><instance_effect url="#${r}-effect" /></material>`;v.push(p),y.push(c),f.set(e,r)}return r})(d[r%d.length])),t+=`<instance_geometry url="#${i}">`+(null!=o?"<bind_material><technique_common>"+o.map((e,r)=>`<instance_material symbol="MESH_MATERIAL_${r}" target="#${e}" >`+'<bind_vertex_input semantic="TEXCOORD" input_semantic="TEXCOORD" input_set="0" /></instance_material>').join("")+"</technique_common></bind_material>":"")+"</instance_geometry>"}return r.children.forEach(r=>t+=e(r)),t+="</node>"}(e),_='<?xml version="1.0" encoding="UTF-8" standalone="no" ?>'+`<COLLADA xmlns="${"1.4.1"===n?"http://www.collada.org/2005/11/COLLADASchema":"https://www.khronos.org/collada/"}" version="${n}">`+"<asset><contributor><authoring_tool>three.js Collada Exporter</authoring_tool>"+(null!==t.author?`<author>${t.author}</author>`:"")+"</contributor>"+`<created>${(new Date).toISOString()}</created>`+`<modified>${(new Date).toISOString()}</modified>`+"<up_axis>Y_UP</up_axis></asset>";_+=`<library_images>${g.join("")}</library_images>`,_+=`<library_effects>${y.join("")}</library_effects>`,_+=`<library_materials>${v.join("")}</library_materials>`,_+=`<library_geometries>${h.join("")}</library_geometries>`,_+=`<library_visual_scenes><visual_scene id="Scene" name="scene">${E}</visual_scene></library_visual_scenes>`,_+='<scene><instance_visual_scene url="#Scene"/></scene>';var x,b,w,M,D,T,O={data:(x=_+="</COLLADA>",b=/^<\//,w=/(\?>$)|(\/>$)/,M=/<[^>]+>[^<]*<\/[^<]+>/,D=((e,r)=>r>0?e+D(e,r-1):""),T=0,x.match(/(<[^>]+>[^<]+<\/[^<]+>)|(<[^>]+>)/g).map(e=>{M.test(e)||w.test(e)||!b.test(e)||T--;var r=`${D("  ",T)}${e}`;return M.test(e)||w.test(e)||b.test(e)||T++,r}).join("\n")),textures:$};return"function"==typeof r&&requestAnimationFrame(()=>r(O)),O}};
//# sourceMappingURL=/sm/c93dc374ff134af81305be082563abcc3798cbb4535b0f2b766a925139793782.map