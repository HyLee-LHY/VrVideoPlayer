/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/postprocessing/BloomPass.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{AdditiveBlending,LinearFilter,RGBAFormat,ShaderMaterial,UniformsUtils,Vector2,WebGLRenderTarget}from"../../../build/three.module.js";import{Pass}from"../postprocessing/Pass.js";import{CopyShader}from"../shaders/CopyShader.js";import{ConvolutionShader}from"../shaders/ConvolutionShader.js";var BloomPass=function(e,r,o,t){Pass.call(this),e=void 0!==e?e:1,r=void 0!==r?r:25,o=void 0!==o?o:4,t=void 0!==t?t:256;var s={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};this.renderTargetX=new WebGLRenderTarget(t,t,s),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new WebGLRenderTarget(t,t,s),this.renderTargetY.texture.name="BloomPass.y",void 0===CopyShader&&console.error("BloomPass relies on CopyShader");var i=CopyShader;this.copyUniforms=UniformsUtils.clone(i.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new ShaderMaterial({uniforms:this.copyUniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,blending:AdditiveBlending,transparent:!0}),void 0===ConvolutionShader&&console.error("BloomPass relies on ConvolutionShader");var a=ConvolutionShader;this.convolutionUniforms=UniformsUtils.clone(a.uniforms),this.convolutionUniforms.uImageIncrement.value=BloomPass.blurX,this.convolutionUniforms.cKernel.value=ConvolutionShader.buildKernel(o),this.materialConvolution=new ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:r.toFixed(1),KERNEL_SIZE_INT:r.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new Pass.FullScreenQuad(null)};BloomPass.prototype=Object.assign(Object.create(Pass.prototype),{constructor:BloomPass,render:function(e,r,o,t,s){s&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=o.texture,this.convolutionUniforms.uImageIncrement.value=BloomPass.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=BloomPass.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,s&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(o),this.clear&&e.clear(),this.fsQuad.render(e)}}),BloomPass.blurX=new Vector2(.001953125,0),BloomPass.blurY=new Vector2(0,.001953125);export{BloomPass};
//# sourceMappingURL=/sm/44423f80e60adbf105a9d71c7513fc86df4cfff4be307e63144642f531780470.map