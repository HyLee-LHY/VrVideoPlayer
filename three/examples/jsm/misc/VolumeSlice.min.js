/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/misc/VolumeSlice.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{ClampToEdgeWrapping,DoubleSide,LinearFilter,Mesh,MeshBasicMaterial,PlaneBufferGeometry,Texture}from"../../../build/three.module.js";var VolumeSlice=function(e,t,i){var a=this;this.volume=e,t=t||0,Object.defineProperty(this,"index",{get:function(){return t},set:function(e){return t=e,a.geometryNeedsUpdate=!0,t}}),this.axis=i||"z",this.canvas=document.createElement("canvas"),this.canvasBuffer=document.createElement("canvas"),this.updateGeometry();var s=new Texture(this.canvas);s.minFilter=LinearFilter,s.wrapS=s.wrapT=ClampToEdgeWrapping;var h=new MeshBasicMaterial({map:s,side:DoubleSide,transparent:!0});this.mesh=new Mesh(this.geometry,h),this.mesh.matrixAutoUpdate=!1,this.geometryNeedsUpdate=!0,this.repaint()};VolumeSlice.prototype={constructor:VolumeSlice,repaint:function(){this.geometryNeedsUpdate&&this.updateGeometry();var e=this.iLength,t=this.jLength,i=this.sliceAccess,a=this.volume,s=this.canvasBuffer,h=this.ctxBuffer,r=h.getImageData(0,0,e,t),n=r.data,o=a.data,c=a.upperThreshold,m=a.lowerThreshold,l=a.windowLow,d=a.windowHigh,p=0;if("label"===a.dataType)for(var u=0;u<t;u++)for(var g=0;g<e;g++){var f=o[i(g,u)];f=f>=this.colorMap.length?f%this.colorMap.length+1:f;var v=this.colorMap[f];n[4*p]=v>>24&255,n[4*p+1]=v>>16&255,n[4*p+2]=v>>8&255,n[4*p+3]=255&v,p++}else for(u=0;u<t;u++)for(g=0;g<e;g++){var x=o[i(g,u)],y=255;y=c>=x&&m<=x?y:0,x=(x=Math.floor(255*(x-l)/(d-l)))>255?255:x<0?0:0|x,n[4*p]=x,n[4*p+1]=x,n[4*p+2]=x,n[4*p+3]=y,p++}h.putImageData(r,0,0),this.ctx.drawImage(s,0,0,e,t,0,0,this.canvas.width,this.canvas.height),this.mesh.material.map.needsUpdate=!0},updateGeometry:function(){var e=this.volume.extractPerpendicularPlane(this.axis,this.index);this.sliceAccess=e.sliceAccess,this.jLength=e.jLength,this.iLength=e.iLength,this.matrix=e.matrix,this.canvas.width=e.planeWidth,this.canvas.height=e.planeHeight,this.canvasBuffer.width=this.iLength,this.canvasBuffer.height=this.jLength,this.ctx=this.canvas.getContext("2d"),this.ctxBuffer=this.canvasBuffer.getContext("2d"),this.geometry&&this.geometry.dispose(),this.geometry=new PlaneBufferGeometry(e.planeWidth,e.planeHeight),this.mesh&&(this.mesh.geometry=this.geometry,this.mesh.matrix.identity(),this.mesh.applyMatrix4(this.matrix)),this.geometryNeedsUpdate=!1}};export{VolumeSlice};
//# sourceMappingURL=/sm/1980c27c9851ddfa5e4dd854ac1a0f10fa2518b9bfbabf31f87d09d9236b70d8.map