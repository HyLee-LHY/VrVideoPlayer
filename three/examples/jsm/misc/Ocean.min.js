/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/misc/Ocean.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{ClampToEdgeWrapping,DataTexture,FloatType,HalfFloatType,LinearFilter,Mesh,NearestFilter,OrthographicCamera,PlaneBufferGeometry,RGBAFormat,RepeatWrapping,Scene,ShaderMaterial,UniformsUtils,Vector2,Vector3,WebGLRenderTarget}from"../../../build/three.module.js";import{OceanShaders}from"../shaders/OceanShaders.js";var Ocean=function(e,r,t,a){function i(e,r){return void 0!==e?e:r}this.changed=!0,this.initial=!0,this.oceanCamera=new OrthographicCamera,this.oceanCamera.position.z=1,this.renderer=e,this.renderer.clearColor(16777215),this.scene=new Scene,a=a||{},this.clearColor=i(a.CLEAR_COLOR,[1,1,1,0]),this.geometryOrigin=i(a.GEOMETRY_ORIGIN,[-1e3,-1e3]),this.sunDirectionX=i(a.SUN_DIRECTION[0],-1),this.sunDirectionY=i(a.SUN_DIRECTION[1],1),this.sunDirectionZ=i(a.SUN_DIRECTION[2],1),this.oceanColor=i(a.OCEAN_COLOR,new Vector3(.004,.016,.047)),this.skyColor=i(a.SKY_COLOR,new Vector3(3.2,9.6,12.8)),this.exposure=i(a.EXPOSURE,.35),this.geometryResolution=i(a.GEOMETRY_RESOLUTION,32),this.geometrySize=i(a.GEOMETRY_SIZE,2e3),this.resolution=i(a.RESOLUTION,64),this.floatSize=i(a.SIZE_OF_FLOAT,4),this.windX=i(a.INITIAL_WIND[0],10),this.windY=i(a.INITIAL_WIND[1],10),this.size=i(a.INITIAL_SIZE,250),this.choppiness=i(a.INITIAL_CHOPPINESS,1.5),this.matrixNeedsUpdate=!1;var s=i(a.USE_HALF_FLOAT,!1)?HalfFloatType:FloatType,n={minFilter:LinearFilter,magFilter:LinearFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping,format:RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:s},h={minFilter:NearestFilter,magFilter:NearestFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping,format:RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:s},o={minFilter:NearestFilter,magFilter:NearestFilter,wrapS:RepeatWrapping,wrapT:RepeatWrapping,format:RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:s};this.initialSpectrumFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,o),this.spectrumFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,h),this.pingPhaseFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,h),this.pongPhaseFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,h),this.pingTransformFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,h),this.pongTransformFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,h),this.displacementMapFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,n),this.normalMapFramebuffer=new WebGLRenderTarget(this.resolution,this.resolution,n);var u=OceanShaders.ocean_sim_vertex,l=OceanShaders.ocean_subtransform,m=UniformsUtils.clone(l.uniforms);this.materialOceanHorizontal=new ShaderMaterial({uniforms:m,vertexShader:u.vertexShader,fragmentShader:"#define HORIZONTAL \n"+l.fragmentShader}),this.materialOceanHorizontal.uniforms.u_transformSize={value:this.resolution},this.materialOceanHorizontal.uniforms.u_subtransformSize={value:null},this.materialOceanHorizontal.uniforms.u_input={value:null},this.materialOceanHorizontal.depthTest=!1;var f=OceanShaders.ocean_subtransform,c=UniformsUtils.clone(f.uniforms);this.materialOceanVertical=new ShaderMaterial({uniforms:c,vertexShader:u.vertexShader,fragmentShader:f.fragmentShader}),this.materialOceanVertical.uniforms.u_transformSize={value:this.resolution},this.materialOceanVertical.uniforms.u_subtransformSize={value:null},this.materialOceanVertical.uniforms.u_input={value:null},this.materialOceanVertical.depthTest=!1;var p=OceanShaders.ocean_initial_spectrum,d=UniformsUtils.clone(p.uniforms);this.materialInitialSpectrum=new ShaderMaterial({uniforms:d,vertexShader:p.vertexShader,fragmentShader:p.fragmentShader}),this.materialInitialSpectrum.uniforms.u_wind={value:new Vector2},this.materialInitialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialInitialSpectrum.depthTest=!1;var g=OceanShaders.ocean_phase,S=UniformsUtils.clone(g.uniforms);this.materialPhase=new ShaderMaterial({uniforms:S,vertexShader:u.vertexShader,fragmentShader:g.fragmentShader}),this.materialPhase.uniforms.u_resolution={value:this.resolution},this.materialPhase.depthTest=!1;var v=OceanShaders.ocean_spectrum,O=UniformsUtils.clone(v.uniforms);this.materialSpectrum=new ShaderMaterial({uniforms:O,vertexShader:u.vertexShader,fragmentShader:v.fragmentShader}),this.materialSpectrum.uniforms.u_initialSpectrum={value:null},this.materialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialSpectrum.depthTest=!1;var T=OceanShaders.ocean_normals,_=UniformsUtils.clone(T.uniforms);this.materialNormal=new ShaderMaterial({uniforms:_,vertexShader:u.vertexShader,fragmentShader:T.fragmentShader}),this.materialNormal.uniforms.u_displacementMap={value:null},this.materialNormal.uniforms.u_resolution={value:this.resolution},this.materialNormal.depthTest=!1;var F=OceanShaders.ocean_main,b=UniformsUtils.clone(F.uniforms);this.materialOcean=new ShaderMaterial({uniforms:b,vertexShader:F.vertexShader,fragmentShader:F.fragmentShader}),this.materialOcean.uniforms.u_geometrySize={value:this.resolution},this.materialOcean.uniforms.u_displacementMap={value:this.displacementMapFramebuffer.texture},this.materialOcean.uniforms.u_normalMap={value:this.normalMapFramebuffer.texture},this.materialOcean.uniforms.u_oceanColor={value:this.oceanColor},this.materialOcean.uniforms.u_skyColor={value:this.skyColor},this.materialOcean.uniforms.u_sunDirection={value:new Vector3(this.sunDirectionX,this.sunDirectionY,this.sunDirectionZ)},this.materialOcean.uniforms.u_exposure={value:this.exposure},this.materialOceanHorizontal.blending=0,this.materialOceanVertical.blending=0,this.materialInitialSpectrum.blending=0,this.materialPhase.blending=0,this.materialSpectrum.blending=0,this.materialNormal.blending=0,this.materialOcean.blending=0,this.screenQuad=new Mesh(new PlaneBufferGeometry(2,2)),this.scene.add(this.screenQuad),this.generateSeedPhaseTexture(),this.generateMesh()};Ocean.prototype.generateMesh=function(){var e=new PlaneBufferGeometry(this.geometrySize,this.geometrySize,this.geometryResolution,this.geometryResolution);e.rotateX(-Math.PI/2),this.oceanMesh=new Mesh(e,this.materialOcean)},Ocean.prototype.render=function(){var e=this.renderer.getRenderTarget();this.scene.overrideMaterial=null,this.changed&&this.renderInitialSpectrum(),this.renderWavePhase(),this.renderSpectrum(),this.renderSpectrumFFT(),this.renderNormalMap(),this.scene.overrideMaterial=null,this.renderer.setRenderTarget(e)},Ocean.prototype.generateSeedPhaseTexture=function(){this.pingPhase=!0;for(var e=new window.Float32Array(this.resolution*this.resolution*4),r=0;r<this.resolution;r++)for(var t=0;t<this.resolution;t++)e[r*this.resolution*4+4*t]=2*Math.random()*Math.PI,e[r*this.resolution*4+4*t+1]=0,e[r*this.resolution*4+4*t+2]=0,e[r*this.resolution*4+4*t+3]=0;this.pingPhaseTexture=new DataTexture(e,this.resolution,this.resolution,RGBAFormat),this.pingPhaseTexture.wrapS=ClampToEdgeWrapping,this.pingPhaseTexture.wrapT=ClampToEdgeWrapping,this.pingPhaseTexture.type=FloatType},Ocean.prototype.renderInitialSpectrum=function(){this.scene.overrideMaterial=this.materialInitialSpectrum,this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY),this.materialInitialSpectrum.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.initialSpectrumFramebuffer),this.renderer.clear(),this.renderer.render(this.scene,this.oceanCamera)},Ocean.prototype.renderWavePhase=function(){this.scene.overrideMaterial=this.materialPhase,this.screenQuad.material=this.materialPhase,this.initial?(this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture,this.initial=!1):this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime,this.materialPhase.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer),this.renderer.render(this.scene,this.oceanCamera),this.pingPhase=!this.pingPhase},Ocean.prototype.renderSpectrum=function(){this.scene.overrideMaterial=this.materialSpectrum,this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer.texture,this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness,this.materialSpectrum.uniforms.u_size.value=this.size,this.renderer.setRenderTarget(this.spectrumFramebuffer),this.renderer.render(this.scene,this.oceanCamera)},Ocean.prototype.renderSpectrumFFT=function(){var e=Math.log(this.resolution)/Math.log(2);this.scene.overrideMaterial=this.materialOceanHorizontal;for(var r=0;r<e;r++)0===r?(this.materialOceanHorizontal.uniforms.u_input.value=this.spectrumFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):r%2==1?(this.materialOceanHorizontal.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pongTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):(this.materialOceanHorizontal.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera));this.scene.overrideMaterial=this.materialOceanVertical;for(r=e;r<2*e;r++)r===2*e-1?(this.materialOceanVertical.uniforms.u_input.value=e%2==0?this.pingTransformFramebuffer.texture:this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.displacementMapFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):r%2==1?(this.materialOceanVertical.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pongTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera)):(this.materialOceanVertical.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.setRenderTarget(this.pingTransformFramebuffer),this.renderer.render(this.scene,this.oceanCamera))},Ocean.prototype.renderNormalMap=function(){this.scene.overrideMaterial=this.materialNormal,this.changed&&(this.materialNormal.uniforms.u_size.value=this.size),this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer.texture,this.renderer.setRenderTarget(this.normalMapFramebuffer),this.renderer.clear(),this.renderer.render(this.scene,this.oceanCamera)};export{Ocean};
//# sourceMappingURL=/sm/39032ce2766ba3ff09ef3291e28a578b6d7ede94484481a0c2d42afb4c54910a.map