/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/modifiers/TessellateModifier.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Face3}from"../../../build/three.module.js";var TessellateModifier=function(e){this.maxEdgeLength=e};TessellateModifier.prototype.modify=function(e){for(var o,r=[],l=[],t=this.maxEdgeLength*this.maxEdgeLength,c=0,s=e.faceVertexUvs.length;c<s;c++)l[c]=[];for(c=0,s=e.faces.length;c<s;c++){var a=e.faces[c];if(a instanceof Face3){var v=a.a,n=a.b,x=a.c,p=e.vertices[v],i=e.vertices[n],f=e.vertices[x],m=p.distanceToSquared(i),h=i.distanceToSquared(f),C=p.distanceToSquared(f);if(m>t||h>t||C>t){var N=e.vertices.length,g=a.clone(),y=a.clone();if(m>=h&&m>=C){if((d=p.clone()).lerp(i,.5),g.a=v,g.b=N,g.c=x,y.a=N,y.b=n,y.c=x,3===a.vertexNormals.length)(u=a.vertexNormals[0].clone()).lerp(a.vertexNormals[1],.5),g.vertexNormals[1].copy(u),y.vertexNormals[0].copy(u);if(3===a.vertexColors.length)(b=a.vertexColors[0].clone()).lerp(a.vertexColors[1],.5),g.vertexColors[1].copy(b),y.vertexColors[0].copy(b);o=0}else if(h>=m&&h>=C){if((d=i.clone()).lerp(f,.5),g.a=v,g.b=n,g.c=N,y.a=N,y.b=x,y.c=v,3===a.vertexNormals.length)(u=a.vertexNormals[1].clone()).lerp(a.vertexNormals[2],.5),g.vertexNormals[2].copy(u),y.vertexNormals[0].copy(u),y.vertexNormals[1].copy(a.vertexNormals[2]),y.vertexNormals[2].copy(a.vertexNormals[0]);if(3===a.vertexColors.length)(b=a.vertexColors[1].clone()).lerp(a.vertexColors[2],.5),g.vertexColors[2].copy(b),y.vertexColors[0].copy(b),y.vertexColors[1].copy(a.vertexColors[2]),y.vertexColors[2].copy(a.vertexColors[0]);o=1}else{var d,u,b;if((d=p.clone()).lerp(f,.5),g.a=v,g.b=n,g.c=N,y.a=N,y.b=n,y.c=x,3===a.vertexNormals.length)(u=a.vertexNormals[0].clone()).lerp(a.vertexNormals[2],.5),g.vertexNormals[2].copy(u),y.vertexNormals[0].copy(u);if(3===a.vertexColors.length)(b=a.vertexColors[0].clone()).lerp(a.vertexColors[2],.5),g.vertexColors[2].copy(b),y.vertexColors[0].copy(b);o=2}r.push(g,y),e.vertices.push(d);for(var U=0,V=e.faceVertexUvs.length;U<V;U++)if(e.faceVertexUvs[U].length){var T=e.faceVertexUvs[U][c],q=T[0],E=T[1],L=T[2];if(0===o){(F=q.clone()).lerp(E,.5);var M=[q.clone(),F.clone(),L.clone()],S=[F.clone(),E.clone(),L.clone()]}else if(1===o){(F=E.clone()).lerp(L,.5);M=[q.clone(),E.clone(),F.clone()],S=[F.clone(),L.clone(),q.clone()]}else{var F;(F=q.clone()).lerp(L,.5);M=[q.clone(),E.clone(),F.clone()],S=[F.clone(),E.clone(),L.clone()]}l[U].push(M,S)}}else{r.push(a);for(U=0,V=e.faceVertexUvs.length;U<V;U++)l[U].push(e.faceVertexUvs[U][c])}}}e.faces=r,e.faceVertexUvs=l};export{TessellateModifier};
//# sourceMappingURL=/sm/d0ad1f0ccfb1bc9a013eedea32ca5cf2c532ef725ffffc8fce7b61eab07a2262.map