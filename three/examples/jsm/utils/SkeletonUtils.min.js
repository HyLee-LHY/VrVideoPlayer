/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/utils/SkeletonUtils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{AnimationClip,AnimationMixer,Euler,Matrix4,Quaternion,QuaternionKeyframeTrack,SkeletonHelper,Vector2,Vector3,VectorKeyframeTrack}from"../../../build/three.module.js";var SkeletonUtils={retarget:function(){var e=new Vector3,t=new Quaternion,r=new Vector3,n=new Matrix4,o=new Matrix4,i=new Matrix4;return function(a,s,l){(l=l||{}).preserveMatrix=void 0===l.preserveMatrix||l.preserveMatrix,l.preservePosition=void 0===l.preservePosition||l.preservePosition,l.preserveHipPosition=void 0!==l.preserveHipPosition&&l.preserveHipPosition,l.useTargetMatrix=void 0!==l.useTargetMatrix&&l.useTargetMatrix,l.hip=void 0!==l.hip?l.hip:"hip",l.names=l.names||{};var p,m,u,c,f,x,d=s.isObject3D?s.skeleton.bones:this.getBones(s),v=a.isObject3D?a.skeleton.bones:this.getBones(a);if(a.isObject3D?a.skeleton.pose():(l.useTargetMatrix=!0,l.preserveMatrix=!1),l.preservePosition)for(f=[],x=0;x<v.length;x++)f.push(v[x].position.clone());if(l.preserveMatrix)for(a.updateMatrixWorld(),a.matrixWorld.identity(),x=0;x<a.children.length;++x)a.children[x].updateMatrixWorld(!0);if(l.offsets)for(p=[],x=0;x<v.length;++x)m=v[x],u=l.names[m.name]||m.name,l.offsets&&l.offsets[u]&&(m.matrix.multiply(l.offsets[u]),m.matrix.decompose(m.position,m.quaternion,m.scale),m.updateMatrixWorld()),p.push(m.matrixWorld.clone());for(x=0;x<v.length;++x){if(m=v[x],u=l.names[m.name]||m.name,c=this.getBoneByName(u,d),i.copy(m.matrixWorld),c){if(c.updateMatrixWorld(),l.useTargetMatrix?o.copy(c.matrixWorld):(o.getInverse(a.matrixWorld),o.multiply(c.matrixWorld)),r.setFromMatrixScale(o),o.scale(r.set(1/r.x,1/r.y,1/r.z)),i.makeRotationFromQuaternion(t.setFromRotationMatrix(o)),a.isObject3D){var h=v.indexOf(m),g=p?p[h]:n.getInverse(a.skeleton.boneInverses[h]);i.multiply(g)}i.copyPosition(o)}m.parent&&m.parent.isBone?(m.matrix.getInverse(m.parent.matrixWorld),m.matrix.multiply(i)):m.matrix.copy(i),l.preserveHipPosition&&u===l.hip&&m.matrix.setPosition(e.set(0,m.position.y,0)),m.matrix.decompose(m.position,m.quaternion,m.scale),m.updateMatrixWorld()}if(l.preservePosition)for(x=0;x<v.length;++x)m=v[x],(u=l.names[m.name]||m.name)!==l.hip&&m.position.copy(f[x]);l.preserveMatrix&&a.updateMatrixWorld(!0)}}(),retargetClip:function(e,t,r,n){(n=n||{}).useFirstFramePosition=void 0!==n.useFirstFramePosition&&n.useFirstFramePosition,n.fps=void 0!==n.fps?n.fps:30,n.names=n.names||[],t.isObject3D||(t=this.getHelperFromSkeleton(t));var o,i,a,s,l,p,m=Math.round(r.duration*(n.fps/1e3)*1e3),u=1/n.fps,c=[],f=new AnimationMixer(t),x=this.getBones(e.skeleton),d=[];for(f.clipAction(r).play(),f.update(0),t.updateMatrixWorld(),l=0;l<m;++l){var v=l*u;for(this.retarget(e,t,n),p=0;p<x.length;++p)s=n.names[x[p].name]||x[p].name,this.getBoneByName(s,t.skeleton)&&(i=x[p],a=d[p]=d[p]||{bone:i},n.hip===s&&(a.pos||(a.pos={times:new Float32Array(m),values:new Float32Array(3*m)}),n.useFirstFramePosition&&(0===l&&(o=i.position.clone()),i.position.sub(o)),a.pos.times[l]=v,i.position.toArray(a.pos.values,3*l)),a.quat||(a.quat={times:new Float32Array(m),values:new Float32Array(4*m)}),a.quat.times[l]=v,i.quaternion.toArray(a.quat.values,4*l));f.update(u),t.updateMatrixWorld()}for(l=0;l<d.length;++l)(a=d[l])&&(a.pos&&c.push(new VectorKeyframeTrack(".bones["+a.bone.name+"].position",a.pos.times,a.pos.values)),c.push(new QuaternionKeyframeTrack(".bones["+a.bone.name+"].quaternion",a.quat.times,a.quat.values)));return f.uncacheAction(r),new AnimationClip(r.name,-1,c)},getHelperFromSkeleton:function(e){var t=new SkeletonHelper(e.bones[0]);return t.skeleton=e,t},getSkeletonOffsets:function(){var e=new Vector3,t=new Vector3,r=new Vector3,n=new Vector3,o=new Vector2,i=new Vector2;return function(a,s,l){(l=l||{}).hip=void 0!==l.hip?l.hip:"hip",l.names=l.names||{},s.isObject3D||(s=this.getHelperFromSkeleton(s));var p,m,u,c,f=Object.keys(l.names),x=Object.values(l.names),d=s.isObject3D?s.skeleton.bones:this.getBones(s),v=a.isObject3D?a.skeleton.bones:this.getBones(a),h=[];for(a.skeleton.pose(),c=0;c<v.length;++c)if(p=v[c],u=l.names[p.name]||p.name,(m=this.getBoneByName(u,d))&&u!==l.hip){var g=this.getNearestBone(p.parent,f),M=this.getNearestBone(m.parent,x);g.updateMatrixWorld(),M.updateMatrixWorld(),e.setFromMatrixPosition(g.matrixWorld),t.setFromMatrixPosition(p.matrixWorld),r.setFromMatrixPosition(M.matrixWorld),n.setFromMatrixPosition(m.matrixWorld),o.subVectors(new Vector2(t.x,t.y),new Vector2(e.x,e.y)).normalize(),i.subVectors(new Vector2(n.x,n.y),new Vector2(r.x,r.y)).normalize();var y=o.angle()-i.angle(),b=(new Matrix4).makeRotationFromEuler(new Euler(0,0,y));p.matrix.multiply(b),p.matrix.decompose(p.position,p.quaternion,p.scale),p.updateMatrixWorld(),h[u]=b}return h}}(),renameBones:function(e,t){for(var r=this.getBones(e),n=0;n<r.length;++n){var o=r[n];t[o.name]&&(o.name=t[o.name])}return this},getBones:function(e){return Array.isArray(e)?e:e.bones},getBoneByName:function(e,t){for(var r=0,n=this.getBones(t);r<n.length;r++)if(e===n[r].name)return n[r]},getNearestBone:function(e,t){for(;e.isBone;){if(-1!==t.indexOf(e.name))return e;e=e.parent}},findBoneTrackData:function(e,t){for(var r=/\[(.*)\]\.(.*)/,n={name:e},o=0;o<t.length;++o){var i=r.exec(t[o].name);i&&e===i[1]&&(n[i[2]]=o)}return n},getEqualsBonesNames:function(e,t){var r=this.getBones(e),n=this.getBones(t),o=[];e:for(var i=0;i<r.length;i++)for(var a=r[i].name,s=0;s<n.length;s++)if(a===n[s].name){o.push(a);continue e}return o},clone:function(e){var t=new Map,r=new Map,n=e.clone();return parallelTraverse(e,n,function(e,n){t.set(n,e),r.set(e,n)}),n.traverse(function(e){if(e.isSkinnedMesh){var n=e,o=t.get(e),i=o.skeleton.bones;n.skeleton=o.skeleton.clone(),n.bindMatrix.copy(o.bindMatrix),n.skeleton.bones=i.map(function(e){return r.get(e)}),n.bind(n.skeleton,n.bindMatrix)}}),n}};function parallelTraverse(e,t,r){r(e,t);for(var n=0;n<e.children.length;n++)parallelTraverse(e.children[n],t.children[n],r)}export{SkeletonUtils};
//# sourceMappingURL=/sm/8dbf27fff97b58ffae90574b259dfefc9ac6c5925b5f4e970fc103cf366e1a02.map