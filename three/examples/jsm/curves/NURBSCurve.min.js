/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/curves/NURBSCurve.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Curve,Vector3,Vector4}from"../../../build/three.module.js";import{NURBSUtils}from"../curves/NURBSUtils.js";var NURBSCurve=function(t,o,e,r,s){Curve.call(this),this.degree=t,this.knots=o,this.controlPoints=[],this.startKnot=r||0,this.endKnot=s||this.knots.length-1;for(var n=0;n<e.length;++n){var i=e[n];this.controlPoints[n]=new Vector4(i.x,i.y,i.z,i.w)}};NURBSCurve.prototype=Object.create(Curve.prototype),NURBSCurve.prototype.constructor=NURBSCurve,NURBSCurve.prototype.getPoint=function(t,o){var e=o||new Vector3,r=this.knots[this.startKnot]+t*(this.knots[this.endKnot]-this.knots[this.startKnot]),s=NURBSUtils.calcBSplinePoint(this.degree,this.knots,this.controlPoints,r);return 1!=s.w&&s.divideScalar(s.w),e.set(s.x,s.y,s.z)},NURBSCurve.prototype.getTangent=function(t,o){var e=o||new Vector3,r=this.knots[0]+t*(this.knots[this.knots.length-1]-this.knots[0]),s=NURBSUtils.calcNURBSDerivatives(this.degree,this.knots,this.controlPoints,r,1);return e.copy(s[1]).normalize(),e};export{NURBSCurve};
//# sourceMappingURL=/sm/cf21b0984b31d1b0570b4092ca9d865dc29618aa8e758d2a3b740612e4c4b4f4.map