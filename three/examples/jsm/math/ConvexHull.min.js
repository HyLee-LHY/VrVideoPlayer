/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/math/ConvexHull.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Line3,Plane,Triangle,Vector3}from"../../../build/three.module.js";var ConvexHull=function(){var t,e,n,i,r=0,s=new Vector3;function o(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new l,this.unassigned=new l,this.vertices=[]}function a(){this.normal=new Vector3,this.midpoint=new Vector3,this.area=0,this.constant=0,this.outside=null,this.mark=r,this.edge=null}function h(t,e){this.vertex=t,this.prev=null,this.next=null,this.twin=null,this.face=e}function u(t){this.point=t,this.prev=null,this.next=null,this.face=null}function l(){this.head=null,this.tail=null}return Object.assign(o.prototype,{setFromPoints:function(t){!0!==Array.isArray(t)&&console.error("THREE.ConvexHull: Points parameter is not an array."),t.length<4&&console.error("THREE.ConvexHull: The algorithm needs at least four points."),this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.vertices.push(new u(t[e]));return this.compute(),this},setFromObject:function(t){var e=[];return t.updateMatrixWorld(!0),t.traverse(function(t){var n,i,r,s=t.geometry;if(void 0!==s)if(s.isGeometry){var o=s.vertices;for(n=0,i=o.length;n<i;n++)(r=o[n].clone()).applyMatrix4(t.matrixWorld),e.push(r)}else if(s.isBufferGeometry){var a=s.attributes.position;if(void 0!==a)for(n=0,i=a.count;n<i;n++)(r=new Vector3).fromBufferAttribute(a,n).applyMatrix4(t.matrixWorld),e.push(r)}}),this.setFromPoints(e)},containsPoint:function(t){for(var e=this.faces,n=0,i=e.length;n<i;n++){if(e[n].distanceToPoint(t)>this.tolerance)return!1}return!0},intersectRay:function(t,e){for(var n=this.faces,i=-1/0,r=1/0,s=0,o=n.length;s<o;s++){var a=n[s],h=a.distanceToPoint(t.origin),u=a.normal.dot(t.direction);if(h>0&&u>=0)return null;var l=0!==u?-h/u:0;if(!(l<=0)&&(u>0?r=Math.min(l,r):i=Math.max(l,i),i>r))return null}return i!==-1/0?t.at(i,e):t.at(r,e),e},intersectsRay:function(t){return null!==this.intersectRay(t,s)},makeEmpty:function(){return this.faces=[],this.vertices=[],this},addVertexToFace:function(t,e){return t.face=e,null===e.outside?this.assigned.append(t):this.assigned.insertBefore(e.outside,t),e.outside=t,this},removeVertexFromFace:function(t,e){return t===e.outside&&(null!==t.next&&t.next.face===e?e.outside=t.next:e.outside=null),this.assigned.remove(t),this},removeAllVerticesFromFace:function(t){if(null!==t.outside){for(var e=t.outside,n=t.outside;null!==n.next&&n.next.face===t;)n=n.next;return this.assigned.removeSubList(e,n),e.prev=n.next=null,t.outside=null,e}},deleteFaceVertices:function(t,e){var n=this.removeAllVerticesFromFace(t);if(void 0!==n)if(void 0===e)this.unassigned.appendChain(n);else{var i=n;do{var r=i.next;e.distanceToPoint(i.point)>this.tolerance?this.addVertexToFace(i,e):this.unassigned.append(i),i=r}while(null!==i)}return this},resolveUnassignedPoints:function(t){if(!1===this.unassigned.isEmpty()){var e=this.unassigned.first();do{for(var n=e.next,i=this.tolerance,s=null,o=0;o<t.length;o++){var a=t[o];if(a.mark===r){var h=a.distanceToPoint(e.point);if(h>i&&(i=h,s=a),i>1e3*this.tolerance)break}}null!==s&&this.addVertexToFace(e,s),e=n}while(null!==e)}return this},computeExtremes:function(){var t,e,n,i=new Vector3,r=new Vector3,s=[],o=[];for(t=0;t<3;t++)s[t]=o[t]=this.vertices[0];for(i.copy(this.vertices[0].point),r.copy(this.vertices[0].point),t=0,e=this.vertices.length;t<e;t++){var a=this.vertices[t],h=a.point;for(n=0;n<3;n++)h.getComponent(n)<i.getComponent(n)&&(i.setComponent(n,h.getComponent(n)),s[n]=a);for(n=0;n<3;n++)h.getComponent(n)>r.getComponent(n)&&(r.setComponent(n,h.getComponent(n)),o[n]=a)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(i.x),Math.abs(r.x))+Math.max(Math.abs(i.y),Math.abs(r.y))+Math.max(Math.abs(i.z),Math.abs(r.z))),{min:s,max:o}},computeInitialHull:function(){void 0===t&&(t=new Line3,e=new Plane,n=new Vector3);var i,r,s,o,h,u,l,c,d,p=this.vertices,f=this.computeExtremes(),v=f.min,g=f.max,m=0,x=0;for(u=0;u<3;u++)(d=g[u].point.getComponent(u)-v[u].point.getComponent(u))>m&&(m=d,x=u);for(r=v[x],s=g[x],m=0,t.set(r.point,s.point),u=0,l=this.vertices.length;u<l;u++)(i=p[u])!==r&&i!==s&&(t.closestPointToPoint(i.point,!0,n),(d=n.distanceToSquared(i.point))>m&&(m=d,o=i));for(m=-1,e.setFromCoplanarPoints(r.point,s.point,o.point),u=0,l=this.vertices.length;u<l;u++)(i=p[u])!==r&&i!==s&&i!==o&&(d=Math.abs(e.distanceToPoint(i.point)))>m&&(m=d,h=i);var w=[];if(e.distanceToPoint(h.point)<0)for(w.push(a.create(r,s,o),a.create(h,s,r),a.create(h,o,s),a.create(h,r,o)),u=0;u<3;u++)c=(u+1)%3,w[u+1].getEdge(2).setTwin(w[0].getEdge(c)),w[u+1].getEdge(1).setTwin(w[c+1].getEdge(0));else for(w.push(a.create(r,o,s),a.create(h,r,s),a.create(h,s,o),a.create(h,o,r)),u=0;u<3;u++)c=(u+1)%3,w[u+1].getEdge(2).setTwin(w[0].getEdge((3-u)%3)),w[u+1].getEdge(0).setTwin(w[c+1].getEdge(1));for(u=0;u<4;u++)this.faces.push(w[u]);for(u=0,l=p.length;u<l;u++)if((i=p[u])!==r&&i!==s&&i!==o&&i!==h){m=this.tolerance;var T=null;for(c=0;c<4;c++)(d=this.faces[c].distanceToPoint(i.point))>m&&(m=d,T=this.faces[c]);null!==T&&this.addVertexToFace(i,T)}return this},reindexFaces:function(){for(var t=[],e=0;e<this.faces.length;e++){var n=this.faces[e];n.mark===r&&t.push(n)}return this.faces=t,this},nextVertexToAdd:function(){if(!1===this.assigned.isEmpty()){var t,e=0,n=this.assigned.first().face,i=n.outside;do{var r=n.distanceToPoint(i.point);r>e&&(e=r,t=i),i=i.next}while(null!==i&&i.face===n);return t}},computeHorizon:function(t,e,n,i){var s;this.deleteFaceVertices(n),n.mark=1,s=null===e?e=n.getEdge(0):e.next;do{var o=s.twin,a=o.face;a.mark===r&&(a.distanceToPoint(t)>this.tolerance?this.computeHorizon(t,o,a,i):i.push(s)),s=s.next}while(s!==e);return this},addAdjoiningFace:function(t,e){var n=a.create(t,e.tail(),e.head());return this.faces.push(n),n.getEdge(-1).setTwin(e.twin),n.getEdge(0)},addNewFaces:function(t,e){this.newFaces=[];for(var n=null,i=null,r=0;r<e.length;r++){var s=e[r],o=this.addAdjoiningFace(t,s);null===n?n=o:o.next.setTwin(i),this.newFaces.push(o.face),i=o}return n.next.setTwin(i),this},addVertexToHull:function(t){var e=[];return this.unassigned.clear(),this.removeVertexFromFace(t,t.face),this.computeHorizon(t.point,null,t.face,e),this.addNewFaces(t,e),this.resolveUnassignedPoints(this.newFaces),this},cleanup:function(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this},compute:function(){var t;for(this.computeInitialHull();void 0!==(t=this.nextVertexToAdd());)this.addVertexToHull(t);return this.reindexFaces(),this.cleanup(),this}}),Object.assign(a,{create:function(t,e,n){var i=new a,r=new h(t,i),s=new h(e,i),o=new h(n,i);return r.next=o.prev=s,s.next=r.prev=o,o.next=s.prev=r,i.edge=r,i.compute()}}),Object.assign(a.prototype,{getEdge:function(t){for(var e=this.edge;t>0;)e=e.next,t--;for(;t<0;)e=e.prev,t++;return e},compute:function(){void 0===i&&(i=new Triangle);var t=this.edge.tail(),e=this.edge.head(),n=this.edge.next.head();return i.set(t.point,e.point,n.point),i.getNormal(this.normal),i.getMidpoint(this.midpoint),this.area=i.getArea(),this.constant=this.normal.dot(this.midpoint),this},distanceToPoint:function(t){return this.normal.dot(t)-this.constant}}),Object.assign(h.prototype,{head:function(){return this.vertex},tail:function(){return this.prev?this.prev.vertex:null},length:function(){var t=this.head(),e=this.tail();return null!==e?e.point.distanceTo(t.point):-1},lengthSquared:function(){var t=this.head(),e=this.tail();return null!==e?e.point.distanceToSquared(t.point):-1},setTwin:function(t){return this.twin=t,t.twin=this,this}}),Object.assign(l.prototype,{first:function(){return this.head},last:function(){return this.tail},clear:function(){return this.head=this.tail=null,this},insertBefore:function(t,e){return e.prev=t.prev,e.next=t,null===e.prev?this.head=e:e.prev.next=e,t.prev=e,this},insertAfter:function(t,e){return e.prev=t,e.next=t.next,null===e.next?this.tail=e:e.next.prev=e,t.next=e,this},append:function(t){return null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail,t.next=null,this.tail=t,this},appendChain:function(t){for(null===this.head?this.head=t:this.tail.next=t,t.prev=this.tail;null!==t.next;)t=t.next;return this.tail=t,this},remove:function(t){return null===t.prev?this.head=t.next:t.prev.next=t.next,null===t.next?this.tail=t.prev:t.next.prev=t.prev,this},removeSubList:function(t,e){return null===t.prev?this.head=e.next:t.prev.next=e.next,null===e.next?this.tail=t.prev:e.next.prev=t.prev,this},isEmpty:function(){return null===this.head}}),o}();export{ConvexHull};
//# sourceMappingURL=/sm/adbb2c7170b5a3debb5d4a633f2420b6b176bb358a764861c3c0fc315b7a03f4.map