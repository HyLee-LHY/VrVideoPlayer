/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/three@0.117.1/examples/jsm/math/OBB.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Box3,MathUtils,Matrix4,Matrix3,Ray,Vector3}from"../../../build/three.module.js";var a={c:null,u:[new Vector3,new Vector3,new Vector3],e:[]},b={c:null,u:[new Vector3,new Vector3,new Vector3],e:[]},R=[[],[],[]],AbsR=[[],[],[]],t=[],xAxis=new Vector3,yAxis=new Vector3,zAxis=new Vector3,v1=new Vector3,size=new Vector3,closestPoint=new Vector3,rotationMatrix=new Matrix3,aabb=new Box3,matrix=new Matrix4,inverse=new Matrix4,localRay=new Ray;function OBB(t=new Vector3,e=new Vector3,a=new Matrix3){this.center=t,this.halfSize=e,this.rotation=a}function matrix4FromRotationMatrix(t,e){var a=t.elements,i=e.elements;a[0]=i[0],a[1]=i[1],a[2]=i[2],a[3]=0,a[4]=i[3],a[5]=i[4],a[6]=i[5],a[7]=0,a[8]=i[6],a[9]=i[7],a[10]=i[8],a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1}Object.assign(OBB.prototype,{set:function(t,e,a){return this.center=t,this.halfSize=e,this.rotation=a,this},copy:function(t){return this.center.copy(t.center),this.halfSize.copy(t.halfSize),this.rotation.copy(t.rotation),this},clone:function(){return(new this.constructor).copy(this)},getSize:function(t){return t.copy(this.halfSize).multiplyScalar(2)},clampPoint:function(t,e){var a=this.halfSize;v1.subVectors(t,this.center),this.rotation.extractBasis(xAxis,yAxis,zAxis),e.copy(this.center);var i=MathUtils.clamp(v1.dot(xAxis),-a.x,a.x);e.add(xAxis.multiplyScalar(i));var s=MathUtils.clamp(v1.dot(yAxis),-a.y,a.y);e.add(yAxis.multiplyScalar(s));var r=MathUtils.clamp(v1.dot(zAxis),-a.z,a.z);return e.add(zAxis.multiplyScalar(r)),e},containsPoint:function(t){return v1.subVectors(t,this.center),this.rotation.extractBasis(xAxis,yAxis,zAxis),Math.abs(v1.dot(xAxis))<=this.halfSize.x&&Math.abs(v1.dot(yAxis))<=this.halfSize.y&&Math.abs(v1.dot(zAxis))<=this.halfSize.z},intersectsBox3:function(t){return this.intersectsOBB(obb.fromBox3(t))},intersectsSphere:function(t){return this.clampPoint(t.center,closestPoint),closestPoint.distanceToSquared(t.center)<=t.radius*t.radius},intersectsOBB:function(e,i=Number.EPSILON){a.c=this.center,a.e[0]=this.halfSize.x,a.e[1]=this.halfSize.y,a.e[2]=this.halfSize.z,this.rotation.extractBasis(a.u[0],a.u[1],a.u[2]),b.c=e.center,b.e[0]=e.halfSize.x,b.e[1]=e.halfSize.y,b.e[2]=e.halfSize.z,e.rotation.extractBasis(b.u[0],b.u[1],b.u[2]);for(var s=0;s<3;s++)for(var r=0;r<3;r++)R[s][r]=a.u[s].dot(b.u[r]);v1.subVectors(b.c,a.c),t[0]=v1.dot(a.u[0]),t[1]=v1.dot(a.u[1]),t[2]=v1.dot(a.u[2]);for(s=0;s<3;s++)for(r=0;r<3;r++)AbsR[s][r]=Math.abs(R[s][r])+i;var n,o;for(s=0;s<3;s++)if(n=a.e[s],o=b.e[0]*AbsR[s][0]+b.e[1]*AbsR[s][1]+b.e[2]*AbsR[s][2],Math.abs(t[s])>n+o)return!1;for(s=0;s<3;s++)if(n=a.e[0]*AbsR[0][s]+a.e[1]*AbsR[1][s]+a.e[2]*AbsR[2][s],o=b.e[s],Math.abs(t[0]*R[0][s]+t[1]*R[1][s]+t[2]*R[2][s])>n+o)return!1;return n=a.e[1]*AbsR[2][0]+a.e[2]*AbsR[1][0],o=b.e[1]*AbsR[0][2]+b.e[2]*AbsR[0][1],!(Math.abs(t[2]*R[1][0]-t[1]*R[2][0])>n+o)&&(n=a.e[1]*AbsR[2][1]+a.e[2]*AbsR[1][1],o=b.e[0]*AbsR[0][2]+b.e[2]*AbsR[0][0],!(Math.abs(t[2]*R[1][1]-t[1]*R[2][1])>n+o)&&(n=a.e[1]*AbsR[2][2]+a.e[2]*AbsR[1][2],o=b.e[0]*AbsR[0][1]+b.e[1]*AbsR[0][0],!(Math.abs(t[2]*R[1][2]-t[1]*R[2][2])>n+o)&&(n=a.e[0]*AbsR[2][0]+a.e[2]*AbsR[0][0],o=b.e[1]*AbsR[1][2]+b.e[2]*AbsR[1][1],!(Math.abs(t[0]*R[2][0]-t[2]*R[0][0])>n+o)&&(n=a.e[0]*AbsR[2][1]+a.e[2]*AbsR[0][1],o=b.e[0]*AbsR[1][2]+b.e[2]*AbsR[1][0],!(Math.abs(t[0]*R[2][1]-t[2]*R[0][1])>n+o)&&(n=a.e[0]*AbsR[2][2]+a.e[2]*AbsR[0][2],o=b.e[0]*AbsR[1][1]+b.e[1]*AbsR[1][0],!(Math.abs(t[0]*R[2][2]-t[2]*R[0][2])>n+o)&&(n=a.e[0]*AbsR[1][0]+a.e[1]*AbsR[0][0],o=b.e[1]*AbsR[2][2]+b.e[2]*AbsR[2][1],!(Math.abs(t[1]*R[0][0]-t[0]*R[1][0])>n+o)&&(n=a.e[0]*AbsR[1][1]+a.e[1]*AbsR[0][1],o=b.e[0]*AbsR[2][2]+b.e[2]*AbsR[2][0],!(Math.abs(t[1]*R[0][1]-t[0]*R[1][1])>n+o)&&(n=a.e[0]*AbsR[1][2]+a.e[1]*AbsR[0][2],o=b.e[0]*AbsR[2][1]+b.e[1]*AbsR[2][0],!(Math.abs(t[1]*R[0][2]-t[0]*R[1][2])>n+o)))))))))},intersectsPlane:function(t){this.rotation.extractBasis(xAxis,yAxis,zAxis);const e=this.halfSize.x*Math.abs(t.normal.dot(xAxis))+this.halfSize.y*Math.abs(t.normal.dot(yAxis))+this.halfSize.z*Math.abs(t.normal.dot(zAxis)),a=t.normal.dot(this.center)-t.constant;return Math.abs(a)<=e},intersectRay:function(t,e){return this.getSize(size),aabb.setFromCenterAndSize(v1.set(0,0,0),size),matrix4FromRotationMatrix(matrix,this.rotation),matrix.setPosition(this.center),localRay.copy(t).applyMatrix4(inverse.getInverse(matrix)),localRay.intersectBox(aabb,e)?e.applyMatrix4(matrix):null},intersectsRay:function(t){return null!==this.intersectRay(t,v1)},fromBox3:function(t){return t.getCenter(this.center),t.getSize(this.halfSize).multiplyScalar(.5),this.rotation.identity(),this},equals:function(t){return t.center.equals(this.center)&&t.halfSize.equals(this.halfSize)&&t.rotation.equals(this.rotation)},applyMatrix4:function(t){var e=t.elements,a=v1.set(e[0],e[1],e[2]).length(),i=v1.set(e[4],e[5],e[6]).length(),s=v1.set(e[8],e[9],e[10]).length();t.determinant()<0&&(a=-a),rotationMatrix.setFromMatrix4(t);var r=1/a,n=1/i,o=1/s;return rotationMatrix.elements[0]*=r,rotationMatrix.elements[1]*=r,rotationMatrix.elements[2]*=r,rotationMatrix.elements[3]*=n,rotationMatrix.elements[4]*=n,rotationMatrix.elements[5]*=n,rotationMatrix.elements[6]*=o,rotationMatrix.elements[7]*=o,rotationMatrix.elements[8]*=o,this.rotation.multiply(rotationMatrix),this.halfSize.x*=a,this.halfSize.y*=i,this.halfSize.z*=s,v1.setFromMatrixPosition(t),this.center.add(v1),this}});var obb=new OBB;export{OBB};
//# sourceMappingURL=/sm/a609853598ff09f371ab221cb98e559b7d8e72784de093708fcd58f7e982e123.map